syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.keepreal.madagascar.tenrecs";

import "common.proto";
import "google/protobuf/wrappers.proto";

message NotificationMessage {
    string id = 1;
    string userId = 2;
    int64 timestamp = 3;
    NotificationType type = 4;
    bool hasRead = 5;
    oneof notification {
        CommentNotificationMessage commentNotification = 6;
        ReactionNotificationMessage reactionNotification = 7;
        NoticeNotificationMessage noticeNotification = 8;
    }
}

message CommentNotificationMessage {
    FeedMessage feed = 1;
    CommentMessage comment = 2;
}

message ReactionNotificationMessage {
    FeedMessage feed = 1;
    ReactionMessage reaction = 8;
}

message NoticeNotificationMessage {
    NoticeType type = 1;
    oneof notice {
        SubscribeNotice SubscribeNotice = 2;
        MemberNotice memberNotice = 3;
        NewQuestionNotice newQuestionNotice = 4;
        NewAnswerNotice newAnswerNotice= 5;
    }
}
message NewQuestionNotice {
    string feedId = 1;
    string authorId = 2;
}

message NewAnswerNotice {
    string feedId = 1;
    string authorId = 2;
}

message SubscribeNotice {
    string IslandId = 1;
    string subscriberId = 2;
}

message MemberNotice {
    string islandId = 1;
    string memberId = 2;
    string membershipId = 3;
    string membershipName = 4;
    uint64 priceInCents = 5;
    int32 timeInMonths = 6;
}

message UnreadNotificationsCountMessage {
    int32 unreadCommentsCount = 1;
    int32 unreadReactionsCount = 2;
    int32 unreadIslandNoticesCount = 3;
    int32 unreadNewSubscribersCount = 4;
    int32 unreadNewMembersCount = 5;
    int32 unreadNewQuestionCount = 6;
    int32 unreadNewAnswerCount = 7;
}

message QueryNotificationCondition {
    google.protobuf.StringValue id = 1;
    google.protobuf.StringValue userId = 2;
    NotificationTypeValue type = 3;
    NoticeTypeValue noticeType = 4;
}

message CountUnreadNotificationsRequest {
    string userId = 1;
}

message CountUnreadNotificationsResponse {
    CommonStatus status = 1;
    UnreadNotificationsCountMessage unreadCounts = 2;
}

message RetrieveMultipleNotificationsRequest {
    QueryNotificationCondition condition = 1;
    PageRequest pageRequest = 2;
}

message NotificationsResponse {
    CommonStatus status = 1;
    repeated NotificationMessage notifications = 2;
    PageResponse pageResponse = 3;
}

service NotificationService {
    rpc RetrieveMultipleNotifications(RetrieveMultipleNotificationsRequest) returns (NotificationsResponse) {};
    rpc CountUnreadNotifications(CountUnreadNotificationsRequest) returns (CountUnreadNotificationsResponse) {};
}