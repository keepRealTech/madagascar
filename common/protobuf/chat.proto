syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.keepreal.madagascar.asity";

import "common.proto";

message ChatAccessMessage {
  string id = 1;
  string islandId = 2;
  string userId = 3;
  bool hasAccess = 4;
}

message RegisterRequest {
  string userId = 1;
  string userName = 2;
  string portraitUrl = 3;
}

message RegisterResponse {
  CommonStatus status = 1;
  string token = 2;
}

message QuitChatsByIslandIdRequest {
  string userId = 1;
  string islandId = 2;
}

message EnableChatAccessRequest {
  string islandId = 1;
  string userId = 2;
}

message RetrieveChatAccessByIslandIdAndUserIdRequest {
  string islandId = 1;
  string userId = 2;
}

message IslandChatAccessResponse {
  CommonStatus status = 1;
  ChatAccessMessage chatAccess = 2;
  int32 islandChatGroupCount = 3;
  int32 enabledMemberCount = 4;
  repeated string recentEnabledUserIds = 5;
}

message ChatgroupMessage {
  string id = 1;
  string hostId = 2;
  string name = 3;
  string islandId = 4;
  int32 memberCount = 5;
  repeated string membershipIds = 6;
  string bulletin = 7;
  bool muted = 8;
}

message ChatgroupResponse {
  CommonStatus status = 1;
  ChatgroupMessage chatgroup = 2;
}

message CreateChatgroupRequest {
  string hostId = 1;
  string islandId = 2;
  string name = 3;
  repeated string membershipIds = 4;
  string bulletin = 5;
}

service ChatService {
  rpc RegisterUser(RegisterRequest) returns (RegisterResponse) {};
  rpc QuitChatsByIslandId(QuitChatsByIslandIdRequest) returns (CommonStatus) {};
  rpc EnableChatAccess(EnableChatAccessRequest) returns (CommonStatus) {};
  rpc RetrieveChatAccessByIslandIdAndUserId(RetrieveChatAccessByIslandIdAndUserIdRequest) returns (IslandChatAccessResponse) {};
  rpc CreateChatgroup(CreateChatgroupRequest) returns (ChatgroupResponse) {};
}