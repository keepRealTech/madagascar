syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.keepreal.madagascar.asity";

import "common.proto";
import "google/protobuf/wrappers.proto";

message ChatAccessMessage {
  string id = 1;
  string islandId = 2;
  string userId = 3;
  bool hasAccess = 4;
}

message RegisterRequest {
  string userId = 1;
  string userName = 2;
  string portraitUrl = 3;
}

message RegisterResponse {
  CommonStatus status = 1;
  string token = 2;
}

message EnableChatAccessRequest {
  string islandId = 1;
}

message RetrieveChatAccessByIslandIdRequest {
  string islandId = 1;
}

message IslandChatAccessResponse {
  CommonStatus status = 1;
  ChatAccessMessage chatAccess = 2;
  int32 islandChatGroupCount = 3;
  int32 enabledMemberCount = 4;
  repeated string recentEnabledUserIds = 5;
}

message ChatgroupMessage {
  string id = 1;
  string hostId = 2;
  string name = 3;
  string islandId = 4;
  int32 memberCount = 5;
  repeated string membershipIds = 6;
  string bulletin = 7;
  bool muted = 8;
  bool dismissed = 9;
}

message ChatgroupResponse {
  CommonStatus status = 1;
  ChatgroupMessage chatgroup = 2;
}

message CreateChatgroupRequest {
  string hostId = 1;
  string islandId = 2;
  string name = 3;
  repeated string membershipIds = 4;
  string bulletin = 5;
}

message DismissChatgroupRequest {
  string id = 1;
  string userId = 2;
}

message UpdateChatgroupRequest {
  string id = 1;
  google.protobuf.StringValue name = 2;
  string userId = 3;
  google.protobuf.BoolValue muted = 4;
  repeated string membershipIds = 5;
  google.protobuf.StringValue bulletin = 6;
}

message JoinChatgroupRequest {
  string userId = 1;
  string chatgroupId = 2;
}

message RetrieveChatgroupsByIslandIdRequest {
  string islandId = 1;
  string userId = 2;
  PageRequest pageRequest = 3;
}

message IslandChatgroupsResponse {
  CommonStatus status = 1;
  PageResponse pageResponse = 2;
  repeated ChatgroupMessage chatgroups = 3;
}

message RetrieveChatgroupByIdRequest {
  string id = 1;
  string userId = 2;
}

message RetreiveChatgroupsByUserIdRequest {
  string userId = 1;
}

message UserChatgroupsResponse {
  CommonStatus status = 1;
  repeated ChatgroupMessage chatgroups = 2;
}

service ChatService {
  rpc RegisterUser(RegisterRequest) returns (RegisterResponse) {};
  rpc EnableChatAccess(EnableChatAccessRequest) returns (CommonStatus) {};
  rpc RetrieveChatAccessByIslandId(RetrieveChatAccessByIslandIdRequest) returns (IslandChatAccessResponse) {};
  rpc CreateChatgroup(CreateChatgroupRequest) returns (ChatgroupResponse) {};
  rpc UpdateChatgroup(UpdateChatgroupRequest) returns (ChatgroupResponse) {};
  rpc DismissChatgroup(DismissChatgroupRequest) returns (CommonStatus) {};
  rpc JoinChatgroup(JoinChatgroupRequest) returns (CommonStatus) {};
  rpc RetrieveChatgroupsByIslandId(RetrieveChatgroupsByIslandIdRequest) returns (IslandChatgroupsResponse) {};
  rpc RetrieveChatgroupById(RetrieveChatgroupByIdRequest) returns (ChatgroupResponse) {};
  rpc RetrieveChatgroupsByUserId(RetreiveChatgroupsByUserIdRequest) returns (UserChatgroupsResponse) {};
}