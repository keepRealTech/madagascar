syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.keepreal.madagascar.vanga";

import "common.proto";
import "google/protobuf/wrappers.proto";

message ShellSkuMessage {
  string id = 1;
  string appleSkuId = 2;
  string description = 3;
  uint64 shells = 4;
  uint64 priceInCents = 5;
  bool isDefault = 6;
}

message RetrieveShellSkusRequest {
  bool isWechatPay = 1;
}

message ShellSkusResponse {
  CommonStatus status = 1;
  repeated ShellSkuMessage shellSkus = 2;
}

message MembershipSkuMessage {
  string id = 1;
  string description = 2;
  string membershipId = 3;
  uint64 priceInCents = 4;
  uint64 priceInShells = 5;
  int32 timeInMonths = 6;
  bool isDefault = 7;
  string appleSkuId = 8;
}

message RetrieveMembershipSkusByMembershipIdRequest {
  string membershipId = 1;
}

message MembershipSkusResponse {
  CommonStatus status = 1;
  repeated MembershipSkuMessage membershipSkus = 2;
}

message CreateMembershipSkusRequest {
  string membershipId = 1;
  string membershipName = 2;
  uint64 priceInCentsPerMonth = 3;
  string hostId = 4;
  string islandId = 5;
}

message UpdateMembershipSkusByIdRequest {
  string membershipId = 1;
  google.protobuf.StringValue membershipName = 2;
  google.protobuf.Int64Value pricePerMonth = 3;
  google.protobuf.BoolValue active = 4;
}

message DeleteMembershipSkusByIdRequest {
  string membershipId = 1;
}

message RetrieveSupportSkusRequest {
}

message RetrieveSupportSkusResponse {
  CommonStatus status = 1;
  repeated SupportSkuMessage supportSkus = 2;
}

message SupportSkuMessage {
  string id = 1;
  bool defaulted = 2;
  int64 priceInCents = 3;
  int64 priceInShells = 4;
}

service SkuService {
  rpc RetrieveActiveShellSkus (RetrieveShellSkusRequest) returns (ShellSkusResponse) {};
  rpc RetrieveActiveMembershipSkusByMembershipId (RetrieveMembershipSkusByMembershipIdRequest) returns (MembershipSkusResponse) {};
  rpc RetrieveActiveSupportSkus (RetrieveSupportSkusRequest) returns (RetrieveSupportSkusResponse) {};
  rpc CreateMembershipSkusByMembershipId (CreateMembershipSkusRequest) returns (MembershipSkusResponse) {};
  rpc UpdateMembershipSkusByMembershipId (UpdateMembershipSkusByIdRequest) returns (MembershipSkusResponse) {};
  rpc DeleteMembershipSkusByMembershipId (DeleteMembershipSkusByIdRequest) returns (CommonStatus) {};
}
