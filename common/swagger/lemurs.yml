openapi: 3.0.1
info:
  version: "1.8.0"
  title: Keep Real API

security:
  - bearerAuth: []

tags:
  - name: Login
    description: Login controllers
  - name: User
    description: User related controllers
  - name: Island
    description: Island for KOL controllers
  - name: Feed
    description: Feed stream controllers
  - name: Comment
    description: Comments controllers
  - name: Upload
    description: Upload file controllers
  - name: Reaction
    description: Reactions controllers such as likes
  - name: Notification
    description: Notifications controllers
  - name: Report
    description: Reports controllers
  - name: Repost
    description: Reposts controllers
  - name: Config
    description: Configs controllers
  - name: Healthcheck
    description: SLB health check controllers
  - name: Order
    description: Orders controllers
  - name: Payment
    description: Payments controller
  - name: Billing
    description: Billings controller
  - name: Sku
    description: SKU controller
  - name: Membership
    description: Membership controller
  - name: Chat
    description: Chat controller
  - name: FeedGroup
    description: 作品集 controller
  - name: Box
    description: 提问箱 controller
  - name: Support
    description: 支持一下 controller
  - name: Activity
    description: 活动 controller
  - name: Income
    description: 收入 controller
  - name: Banner
    description: Banner controller
  - name: FeedCollection
    description: feed收藏 controller
  - name: Follow
    description: 超级关注 controller

paths:
  /api/healthcheck:
    head:
      tags:
        - Healthcheck
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/login:
    post:
      parameters:
        - $ref: '#/components/parameters/forAdminLoginInQuery'
      tags:
        - Login
      summary: logs in
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLoginRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/v1/refreshToken:
    post:
      tags:
        - Login
      summary: refreshes token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRefreshTokenRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
  /api/v1/login/generate:
    post:
      tags:
        - Login
      summary: 为网页登陆生成二维码凭证
      responses:
        '200':
          description: 二维码凭证
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrTicketResponse'
  /api/v1/login/polling:
    get:
      parameters:
        - $ref: '#/components/parameters/sceneIdInQuery'
      tags:
        - Login
      summary: 轮询二维码状态
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/v1/deviceTokens:
    post:
      tags:
        - Login
      summary: update device token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTokenRequest'
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/userInfo:
    get:
      tags:
        - Login
      summary: retrieves the token user info
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/ossToken:
    get:
      tags:
        - Login
      summary: retrieves the oss token
      responses:
        '200':
          description: oss token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OssTokenResponse'
  /api/v1/users/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - User
      summary: retrieves a user by id
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUserResponse'
    put:
      tags:
        - User
      summary: updates a user by id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PutUserRequest'
            encoding:
              payload:
                contentType: application/json
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v2/users/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    put:
      tags:
        - User
      summary: updates a user by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserRequestV2'
            encoding:
              payload:
                contentType: application/json
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/islands:
    get:
      parameters:
        - $ref: '#/components/parameters/nameInQueryOptional'
        - $ref: '#/components/parameters/subscribedInQuery'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Island
      summary: retrieves islands with pagination
      responses:
        '200':
          description: islands response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandsResponse'
  /api/v1.1/islands:
    post:
      tags:
        - Island
      summary: 创建新的创作首页
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostIslandRequestV11'
      responses:
        '200':
          description: brief island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefIslandResponse'
  /api/v2/islands:
    post:
      tags:
        - Island
      summary: 创建新的创作首页
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIslandRequestV2'
      responses:
        '200':
          description: brief island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefIslandResponse'
  /api/v1/islands/checkName:
    get:
      parameters:
        - $ref: '#/components/parameters/nameInQuery'
      tags:
        - Island
      summary: checks if island name exists
      responses:
        '200':
          description: islands response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckIslandResponse'
  /api/v1/islands/myIslands:
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Island
      summary: retrieves users' islands with pagination
      responses:
        '200':
          description: islands response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefIslandsResponse'
  /api/v1/islands/defaultIslands:
    get:
      parameters:
        - $ref: '#/components/parameters/islandIdInQueryOptional'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Island
      summary: retrieves user create and join islands with pagination
      responses:
        '200':
          description: islands response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandsResponse'
  /api/v1/islands/officialIslands:
    get:
      tags:
        - Island
      summary: retrieves official islands id
      responses:
        '200':
          description: islands response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandProfilesResponse'
  /api/v1/islands/subscribeOfficialIsland:
    post:
      tags:
        - Island
      summary: subscribe official island
      responses:
        '200':
          description: island profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandProfileResponse'
  /api/v1/islands/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Island
      summary: retrieves a island by id
      responses:
        '200':
          description: island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandResponse'
    put:
      tags:
        - Island
      summary: updates a island by id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PutIslandRequest'
      responses:
        '200':
          description: island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefIslandResponse'
  /api/v2/islands/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    put:
      tags:
        - Island
      summary: updates a island by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIslandRequestV2'
      responses:
        '200':
          description: island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefIslandResponse'
  /api/v1.2/islands/{id}/feeds:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/fromHostInQuery'
        - $ref: '#/components/parameters/timestampAfter'
        - $ref: '#/components/parameters/timestampBefore'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/includeChargeableInQuery'
        - $ref: '#/components/parameters/isWorksInQuery'
      tags:
        - Feed
      summary: retrieves a list of feeds with pagination
      responses:
        '200':
          description: feeds response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedsResponseV2'
  /api/v1/islands/{id}/feeds/top:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Feed
      summary: make a feed to top
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopFeedRequest'
      responses:
        '200':
          description: feed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
  /api/v1/islands/{id}/poster:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/refererIdInQuery'
      tags:
        - Island
      security: []
      summary: retrieves the poster for the given island
      responses:
        '200':
          description: island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandPosterResponse'
  /api/v1/islands/{id}/profile:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Island
      summary: retrieves a island with detailed profile by id
      responses:
        '200':
          description: island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandProfileResponse'
  /api/v1/islands/{id}/subscribers:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Island
      summary: retrieves a island subscribers with pagination
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
  /api/v1/islands/{id}/subscribe:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Island
      summary: subscribe to an island
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeIslandRequest'
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/islands/{id}/unsubscribe:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Island
      summary: unsubscribe to an island
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/islands/{id}/reposts:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Repost
      summary: retrieves a list of reposts with pagination
      responses:
        '200':
          description: reposts response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepostsResponse'
    post:
      tags:
        - Repost
      summary: creates a new repost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRepostRequest'
      responses:
        '200':
          description: reposts response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepostResponse'
  /api/v1/reports:
    post:
      tags:
        - Report
      summary: creates a new report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportRequest'
      responses:
        '200':
          description: report response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
  /api/v1.1/feeds:
    get:
      parameters:
        - $ref: '#/components/parameters/timestampAfter'
        - $ref: '#/components/parameters/timestampBefore'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/includeChargeableInQuery'
      tags:
        - Feed
      summary: retrieves a list of feeds with pagination
      responses:
        '200':
          description: feeds response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelinesResponse'
    post:
      tags:
        - Feed
      summary: creates a new feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFeedRequestV2'
      responses:
        '200':
          description: brief feed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/islands/{id}/feeds:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Feed
      summary: 在指定的岛发布动态
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIslandFeedRequest'
      responses:
        '200':
          description: brief feed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
  /api/v1/feeds/check:
    post:
      tags:
        - Feed
      summary: check if has new feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCheckFeedsRequest'
      responses:
        '200':
          description: check feed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCheckFeedsResponse'
  /api/v1/feeds/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/includeChargeableInQuery'
      tags:
        - Feed
      summary: 指定id动态详情
      responses:
        '200':
          description: feed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullFeedResponse'
    put:
      tags:
        - Feed
      summary: update a feed by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFeedRequest'
      responses:
        '200':
          description: brief feed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
    delete:
      tags:
        - Feed
      summary: deletes a feed by id
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/feeds/{id}/comments:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Comment
      summary: retrieves a list of comments with pagination
      responses:
        '200':
          description: comments response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsResponse'
    post:
      tags:
        - Comment
      summary: creates a new comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCommentRequest'
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
  /api/v1/feeds/{id}/reactions:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Reaction
      summary: retrieves a list of reactions with pagination
      responses:
        '200':
          description: reactions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionsResponse'
    post:
      parameters:
        - $ref: '#/components/parameters/isRevokeInQuery'
      tags:
        - Reaction
      summary: creates a new reaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReactionRequest'
      responses:
        '200':
          description: reaction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionResponse'
  /api/v1/feeds/{id}/reposts:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Repost
      summary: retrieves a list of reposts with pagination
      responses:
        '200':
          description: reposts response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepostsResponse'
    post:
      tags:
        - Repost
      summary: creates a new repost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRepostRequest'
      responses:
        '200':
          description: reaction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepostResponse'
  /api/v1/comments/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    delete:
      tags:
        - Comment
      summary: deletes a comment by id
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/upload/mediaUrls:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaUrlsRequest'
      tags:
        - Upload
      summary: retrieves upload image url
      responses:
        '200':
          description: retrieve image url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadUrlListResponse'
  /api/v1/upload/ossSignature:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaUrlsRequest'
      tags:
        - Upload
      summary: retrieves oss signature
      responses:
        '200':
          description: retrieve oss signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OssSignatureResponse'
  /api/v1/notifications:
    get:
      parameters:
        - $ref: '#/components/parameters/notificationTypeInQuery'
        - $ref: '#/components/parameters/noticeTypeInQuery'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Notification
      summary: retrieves a list of notification with pagination
      responses:
        '200':
          description: notifications response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsResponse'
  /api/v1.1/notifications/count:
    get:
      tags:
        - Notification
      summary: retrieves the count of unread notifications
      responses:
        '200':
          description: notifications count response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsCountResponseV2'
  /api/v1/configs:
    get:
      parameters:
        - $ref: '#/components/parameters/configTypeInQuery'
        - $ref: '#/components/parameters/versionInQuery'
        - $ref: '#/components/parameters/channelInQuery'
      tags:
        - Config
      summary: retrieves the client config info
      responses:
        '200':
          description: client configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponseV2'
  /api/v1/updateInfo/ios:
    get:
      parameters:
        - $ref: '#/components/parameters/versionInQuery'
      tags:
        - Config
      summary: retrieves the update info for ios
      responses:
        '200':
          description: client update info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IOSUpdateInfoResponse'
  /api/v1/updateInfo/android:
    get:
      parameters:
        - $ref: '#/components/parameters/versionInQuery'
      tags:
        - Config
      summary: retrieves the update info for ios
      responses:
        '200':
          description: client update info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AndroidUpdateInfoResponse'
  /api/v1/setupInfo/android:
    get:
      tags:
        - Config
      security: []
      summary: get the android setup info
      responses:
        '200':
          description: client setup info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AndroidSetupInfoResponse'
  /api/v1/orders/wechat/{id}/check:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Order
      summary: get the wechat order
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatOrderResponse'
  /api/v1/orders/alipay/{id}/check:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Order
      summary: get the wechat order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlipayCheckRequest'
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v1/orders/ios:
    post:
      tags:
        - Order
      summary: create a new ios shell order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIOSOrderRequest'
      responses:
        '200':
          description: ios scallop order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
  /api/v1/orders/ios/membershipSubscription:
    post:
      tags:
        - Order
      summary: Ios 内购会员
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIOSMembershipSubscriptionRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/orders/wechat:
    post:
      tags:
        - Order
      summary: create a new wechat shell order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWechatOrderRequest'
      responses:
        '200':
          description: wechat scallop order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatOrderResponse'
  /api/v1/islands/{id}/memberSubscription/wechatPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: purchase with wechat pay
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeMemberRequest'
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatOrderResponse'
  /api/v1/islands/{id}/memberSubscription/alipay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 会员支持
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeMemberRequest'
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v1/islands/{id}/memberSubscription/iosPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/versionInQuery'
        - $ref: '#/components/parameters/membershipIdInQuery'
      tags:
        - Payment
      summary: 会员订购H5跳转
      responses:
        '200':
          description: H5 跳转地址
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5RedirectResponse'
  /api/v1/islands/{id}/memberSubscription/wechatPay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      parameters:
        - $ref: '#/components/parameters/sceneTypeInQuery'
      tags:
        - Payment
      summary: 微信h5会员订阅支付
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeMemberRequest'
      responses:
        '200':
          description: dummy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5WechatOrderResponse'
  /api/v1/islands/{id}/memberSubscription/alipay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 支付宝h5会员订阅支付
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlipayH5SubscribeMemberRequest'
      responses:
        '200':
          description: dummy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v1/islands/{id}/memberSubscription/shellPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: purchase with shell
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeMemberRequest'
      responses:
        '200':
          description: dummy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/payments:
    get:
      tags:
        - Payment
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      summary: 获得用户订单信息
      responses:
        '200':
          description: payments response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPaymentsResponse'
  /api/v1.1/payments:
    get:
      tags:
        - Payment
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      summary: 获得用户订单信息
      responses:
        '200':
          description: payments response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPaymentsResponseV11'
  /api/v1/payments/withdraws:
    get:
      tags:
        - Payment
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      summary: 获得用户提现记录
      responses:
        '200':
          description: payments response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithdrawsResponse'
  /api/v1/balances/myWallet:
    get:
      tags:
        - Billing
      summary: get user's wallet
      responses:
        '200':
          description: wallet info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
  /api/v1/balances/myWallet/ios:
    get:
      parameters:
        - $ref: '#/components/parameters/versionInQuery'
      tags:
        - Billing
      summary: 获得钱包 H5跳转地址
      responses:
        '200':
          description: H5 跳转地址
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5RedirectResponse'
  /api/v1/balances/withdraw:
    post:
      tags:
        - Billing
      summary: submit a withdraw request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWithdrawRequest'
      responses:
        '200':
          description: billing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
  /api/v1/billingInfo:
    get:
      tags:
        - Billing
      summary: get current user's billing info
      responses:
        '200':
          description: billing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoResponse'
    put:
      tags:
        - Billing
      summary: post current user's billing info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBillingInfoRequest'
      responses:
        '200':
          description: billing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoResponse'
  /api/v1.1/billingInfo:
    get:
      tags:
        - Billing
      summary: get current user's billing info
      responses:
        '200':
          description: billing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoResponseV11'
    put:
      tags:
        - Billing
      summary: post current user's billing info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBillingInfoRequestV11'
      responses:
        '200':
          description: billing info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoResponseV11'
  /api/v1/balances/skus:
    get:
      tags:
        - Sku
      summary: get all active skus
      responses:
        '200':
          description: skus info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IOSShellSkusResponse'
  /api/v1/balances/wechatSkus:
    get:
      tags:
        - Sku
      summary: get all active wechat skus
      responses:
        '200':
          description: skus info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatShellSkusResponse'
  /api/v1/membership/{id}/skus:
    parameters:
      - $ref: "#/components/parameters/idInPath"
      - $ref: "#/components/parameters/permanentInQuery"
    get:
      tags:
        - Sku
      summary: get all active membership skus
      responses:
        '200':
          description: skus info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipSkusResponse'
  /api/v1/islands/{id}/support/skus:
    parameters:
      - $ref: "#/components/parameters/idInPath"
    get:
      tags:
        - Sku
      summary: 获得支持一下商品信息
      responses:
        '200':
          description: skus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportSkusResponse'
  /api/v2/islands/{id}/sponsors/skus:
    parameters:
      - $ref: "#/components/parameters/idInPath"
    get:
      tags:
        - Sku
      summary: 获得赞助商品信息
      responses:
        '200':
          description: skus
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorSkusResponse'
  /api/v1/islands/{id}/memberships:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Membership
      summary: Create a new membership for given island
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMembershipRequest'
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
    get:
      tags:
        - Membership
      summary: Get memberships for island
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipsResponse'
  /api/v1/islands/{id}/feedMemberships:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Membership
      summary: Get memberships for island
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedMembershipsResponse'
  /api/v1/islands/{id}/myMemberships:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Membership
      summary: 获取我在岛内的所有权益
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyMembershipsResponse'
  /api/v1/islands/{id}/membershipFeeds:
    get:
      parameters:
        - $ref: '#/components/parameters/idInPath'
        - $ref: '#/components/parameters/timestampAfter'
        - $ref: '#/components/parameters/timestampBefore'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Membership
      summary: 获取我在岛内所有可观看的会员动态（包括单独解锁的动态）
      responses:
        '200':
          description: feeds response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelinesResponse'
  /api/v1/memberships/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Membership
      summary: Retrieve a membership
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
    put:
      tags:
        - Membership
      summary: Update a membership
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMembershipRequest'
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipResponse'
    delete:
      tags:
        - Membership
      summary: Remove a membership
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/memberships/{id}/deactivate:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    put:
      tags:
        - Membership
      summary: deletes a membership by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateMembershipRequest'
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/memberships/{id}/top:
    parameters:
      - $ref: '#/components/parameters/idInPath'
      - $ref: '#/components/parameters/isRevokeInQuery'
    post:
      tags:
        - Membership
      summary: deletes a membership by id
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/chats/token:
    get:
      tags:
        - Chat
      summary: get the chat token
      responses:
        '200':
          description: chat token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatTokenResponse'
  /api/v1/chats/settings:
    get:
      tags:
        - Chat
      summary: 获得当前用户的聊天消息设置
      responses:
        '200':
          description: chat settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSettingsResponse'
    put:
      tags:
        - Chat
      summary: 修改当前用户的聊天消息设置
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChatSettingRequest'
      responses:
        '200':
          description: chat settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSettingsResponse'
  /api/v1/users/{id}/chats:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Chat
      summary: check if has access with given user
      responses:
        '200':
          description: chat access response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatAccessResponse'
  /api/v1/users/{id}/chatgroups:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Chat
      summary: retrieve all chat groups for the given island
      responses:
        '200':
          description: chat access response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChatGroupsResponse'
  /api/v1/islands/{id}/chatgroups:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Chat
      summary: retrieve all chat groups for the given island
      responses:
        '200':
          description: chat access response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandChatGroupsResponse'
    post:
      tags:
        - Chat
      summary: create a new chat groups for the given island
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostChatGroupRequest'
      responses:
        '200':
          description: chat access response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupResponse'
  /api/v1/chatgroups/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Chat
      summary: get the chatgroup
      responses:
        '200':
          description: chat access response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupResponse'
    put:
      tags:
        - Chat
      summary: updates the chatgroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChatGroupRequest'
      responses:
        '200':
          description: chat access response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupResponse'
    delete:
      tags:
        - Chat
      summary: removes an existing chat group
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/chatgroups/{id}/join:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Chat
      summary: joins an existing chat group
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/chatgroups/{id}/members:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/largePageSize'
      tags:
        - Chat
      summary: 获取指定chatgroup内的用户列表
      responses:
        '200':
          description: users response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BriefUsersResponse'
  /api/v1/islands/{id}/chataccess/grant:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Chat
      summary: grant access to the islands chats
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/islands/{id}/chataccess:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Chat
      summary: grant access to the islands chats
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandChatAccessResponse'
  /api/v1/users/getBatchAvatars:
    post:
      tags:
        - User
      summary: retrieves users avatar urls in batch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBatchGetUsersRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvatarsResponse'
  /api/v1/feeds/tutorial:
    get:
      tags:
        - Feed
      summary: 获得高级发布指导文件
      responses:
        '200':
          description: 高级发布指导意见
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TutorialResponse'
  /api/v1/islands/identities:
    get:
      tags:
        - Island
      summary: 获得岛创作者类型
      responses:
        '200':
          description: 高级发布指导意见
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandIdentityResponse'
  /api/v1/users/getChatUserInfos:
    post:
      tags:
        - User
      summary: 批量获取私聊用户信息
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBatchGetUsersRequest'
      responses:
        '200':
          description: chat users response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUsersResponse'
  /api/v1/islands/{id}/reposts/generateCode:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Repost
      summary: 生成分享口令
      responses:
        '200':
          description: island share code response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandRepostCodeResponse'
  /api/v1/reposts/resolveCode:
    get:
      parameters:
        - $ref: '#/components/parameters/codeInQuery'
        - $ref: '#/components/parameters/deviceTypeInQuery'
      tags:
        - Repost
      summary: 解析分享口令
      responses:
        '200':
          description: island share code response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveIslandRepostCodeResponse'
  /api/v1/islands/{id}/introduction/dismiss:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Island
      summary: 关闭加入岛成功引导文案
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/upload/refreshVideo:
    get:
      parameters:
        - $ref: '#/components/parameters/videoIdInQuery'
      tags:
        - Upload
      summary: refresh by videoId
      responses:
        '200':
          description: refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshVideoResponse'
  /api/v1/upload/mediaUrl:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaUrlRequest'
      tags:
        - Upload
      summary: retrieves upload video/audio url
      responses:
        '200':
          description: retrieve video/audio url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadUrlResponse'
  /api/v1/mobile/otp:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOTPRequest'
      parameters:
        - $ref: '#/components/parameters/forLoginInQuery'
      tags:
        - Login
      summary: 向指定手机号发送验证码
      security: []
      responses:
        '200':
          description: 成功返回
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/users/mobile:
    put:
      tags:
        - User
      summary: 更新当前用户手机号
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserMobileRequest'
      responses:
        '200':
          description: 成功返回用户信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/islands/{id}/feedgroups:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - FeedGroup
      summary: 创建一个新的作品集
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFeedGroupRequest'
      responses:
        '200':
          description: 单一作品集返回
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedGroupResponse'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - FeedGroup
      summary: 获得所有作品集
      responses:
        '200':
          description: 用户所有作品集返回
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedGroupsResponse'
  /api/v1/feedgroups/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - FeedGroup
      summary: 获得一个作品集
      responses:
        '200':
          description: 单一作品集返回
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedGroupResponse'
    put:
      tags:
        - FeedGroup
      summary: 编辑指定的作品集
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFeedGroupRequest'
      responses:
        '200':
          description: 单一作品集返回
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedGroupResponse'
    delete:
      tags:
        - FeedGroup
      summary: 删除指定的作品集
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/feedgroups/{id}/feeds:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/mediaTypeInQuery'
        - $ref: '#/components/parameters/includeChargeableInQuery'
      tags:
        - Feed
      summary: 获得指定作品集中的动态内容
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedsResponse'
  /api/v1/islands/{id}/boxes/access:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    put:
      tags:
        - Box
      summary: 修改当前岛提问箱权限
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutIslandBoxAccessRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandBoxAccessResponse'
    get:
      tags:
        - Box
      summary: 获取当前岛提问箱权限
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandBoxAccessListResponse'
  /api/v1/islands/{id}/boxes:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Box
      summary: 获得当前岛提问箱相关咨询
      responses:
        '200':
          description: box response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandBoxResponse'
  /api/v1/islands/{id}/boxes/freeQuestions:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Box
      summary: 发起免费提问
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuestionRequest'
      responses:
        '200':
          description: question response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/islands/{id}/boxes/paidQuestions/wechatPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Box
      summary: 发起收费提问
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuestionRequest'
      responses:
        '200':
          description: question response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatOrderResponse'
  /api/v1/islands/{id}/boxes/paidQuestions/iosPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Box
      summary: 发起收费提问
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuestionRequest'
      responses:
        '200':
          description: question response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
  /api/v1/islands/{id}/boxes/questions:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Box
      summary: 获得当前岛所有被回并可公开围观的问题
      responses:
        '200':
          description: questions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsResponse'
  /api/v1/boxes/questions:
    get:
      parameters:
        - $ref: '#/components/parameters/hasAnswerInQuery'
        - $ref: '#/components/parameters/hasMembershipInQuery'
        - $ref: '#/components/parameters/complimentaryInQuery'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Box
      summary: 获得所有提问我的列表
      responses:
        '200':
          description: questions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsResponse'
  /api/v1/boxes/answers:
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Box
      summary: 获得所有被回答的提问列表
      responses:
        '200':
          description: questions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionsResponse'
  /api/v1/boxes/questions/{id}/reposts:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Repost
      summary: 分享一个问题
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRepostRequest'
      responses:
        '200':
          description: reposts response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepostResponse'
  /api/v1/boxes/questions/{id}/ignore:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Box
      summary: 忽略指定问题
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/boxes/questions/{id}/answer:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Box
      summary: 回答指定问题
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAnswerRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/boxes/questions/{id}:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Box
      summary: 获得指定问题详细内容，包括回答、评论等
      responses:
        '200':
          description: full question response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullQuestionResponse'
  /api/v1/questions/{id}/reactions:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      parameters:
        - $ref: '#/components/parameters/isRevokeInQuery'
      tags:
        - Reaction
      summary: 为一个提问创建点赞回应
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReactionRequest'
      responses:
        '200':
          description: reaction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionResponse'
  /api/v1/questions/{id}/comments:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Comment
      summary: 为一个提问创建评论
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCommentRequest'
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
  /api/v1/islands/{id}/feeds/snapshot:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Feed
      summary: 获得岛圈动态快照
      responses:
        '200':
          description: comment response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandFeedSnapshotResponse'
  /api/v1/islands/{id}/support:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Support
      summary: 获得支持商品信息
      responses:
        '200':
          description: retrieve video/audio url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportsResponse'
  /api/v2/islands/{id}/support:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Support
      summary: 获得支持内容信息
      responses:
        '200':
          description: island home membership and support response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportsResponseV2'
  /api/v1/islands/{id}/sponsors/history:
    parameters:
      - $ref: '#/components/parameters/idInPath'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/pageSize'
    get:
      tags:
        - Support
      summary: 获得赞助历史
      responses:
        '200':
          description: sponsor history response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorHistoryResponse'
  /api/v1/islands/{id}/support/iosPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/versionInQuery'
      tags:
        - Payment
      summary: 支持一下 H5跳转地址
      responses:
        '200':
          description: H5 跳转地址
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5RedirectResponse'
  /api/v2/islands/{id}/sponsors/iosPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/versionInQuery'
      tags:
        - Payment
      summary: 支持一下 H5跳转地址
      responses:
        '200':
          description: H5 跳转地址
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5RedirectResponse'
  /api/v1/islands/{id}/support/wechatPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 支持一下微信支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSupportRequest'
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatOrderResponse'
  /api/v2/islands/{id}/sponsors/wechatPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 支持一下微信支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSponsorRequest'
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatOrderResponse'
  /api/v1/islands/{id}/support/alipay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 支持一下支付宝支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSupportRequest'
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v2/islands/{id}/sponsors/alipay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 支持一下支付宝支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSponsorRequest'
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v1/islands/{id}/support/wechatPay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      parameters:
        - $ref: '#/components/parameters/sceneTypeInQuery'
      tags:
        - Payment
      summary: 支持一下h5微信支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSupportRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5WechatOrderResponse'
  /api/v2/islands/{id}/sponsors/wechatPay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      parameters:
        - $ref: '#/components/parameters/sceneTypeInQuery'
      tags:
        - Payment
      summary: 支持一下h5微信支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSponsorRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5WechatOrderResponse'
  /api/v1/islands/{id}/support/alipay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 支持一下h5支付宝支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlipayH5PostSupportRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v2/islands/{id}/sponsors/alipay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 支持一下h5支付宝支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlipayH5PostSponsorRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v1/islands/discovery:
    get:
      tags:
        - Island
      summary: 发现创作者
      responses:
        '200':
          description: island response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IslandDiscoveryResponse'
  /api/v1/islands/{id}/supportTarget:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Island
      summary: 获取岛支持目标
      responses:
        '200':
          description: support target response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTargetsResponse'
    put:
      tags:
        - Island
      summary: 修改岛支持目标
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSupportTargetRequest'
      responses:
        '200':
          description: support target response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTargetResponse'
    delete:
      tags:
        - Island
      summary: 删除岛支持目标
      responses:
        '200':
          description: Dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/islands/{id}/sponsors/gifts:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Support
      summary: 获取支持一下礼物图片列表
      responses:
        '200':
          description: support gift images response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorGiftsResponse'
  /api/v1/islands/{id}/sponsors:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      tags:
        - Support
      summary: 获取赞助信息
      responses:
        '200':
          description: support setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorshipResponse'
    put:
      tags:
        - Support
      summary: 修改支持一下信息
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSponsorRequest'
      responses:
        '200':
          description: support setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorshipResponse'
  /api/v1/feeds/public:
    get:
      parameters:
        - $ref: '#/components/parameters/timestampAfter'
        - $ref: '#/components/parameters/timestampBefore'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/includeChargeableInQuery'
      tags:
        - Feed
      summary: 获得所有公开岛的岛主动态
      responses:
        '200':
          description: feeds response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelinesResponse'
  /api/v1/feeds/{id}/saveAuthority:
    parameters:
      - $ref: '#/components/parameters/idInPath'
      - $ref: '#/components/parameters/canSaveInQuery'
    put:
      tags:
        - Feed
      summary: 设置作品保存权限
      responses:
        '200':
          description: feed save authority
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
  /api/v1/memberships/templates:
    get:
      tags:
        - Membership
      summary: 获得订阅权益模版
      responses:
        '200':
          description: membership templates response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipTemplatesResponse'
  /api/v1/users/qualifications/channels:
    get:
      tags:
        - User
      summary: 获得所有用户认证平台品类
      responses:
        '200':
          description: qualification channels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationChannelsResponse'
  /api/v1/users/qualifications:
    get:
      tags:
        - User
      summary: 获得当前用户提交的认证信息
      responses:
        '200':
          description: qualification channels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserQualificationsResponse'
    put:
      tags:
        - User
      summary: 更新当前用户的认证信息
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserQualificationsRequest'
      responses:
        '200':
          description: qualification channels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserQualificationsResponse'
  /api/v1/activities/banners:
    get:
      tags:
        - Activity
      summary: 获得创作活动banner
      responses:
        '200':
          description: bonues activity response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'
  /api/v1/activities/bonus:
    get:
      tags:
        - Activity
      summary: 获得当前创作奖励金活动奖励
      responses:
        '200':
          description: bonues activity response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BonusResponse'
  /api/v1/feeds/{id}/wechatPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 单独解锁动态APP微信支付
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatOrderResponse'
  /api/v1/feeds/{id}/alipay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 单独解锁动态APP支付宝支付
      responses:
        '200':
          description: wechat order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v1/feeds/{id}/wechatPay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      parameters:
        - $ref: '#/components/parameters/sceneTypeInQuery'
      tags:
        - Payment
      summary: 单独解锁动态APP微信支付
      responses:
        '200':
          description: dummy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5WechatOrderResponse'
  /api/v1/feeds/{id}/alipay/html5:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - Payment
      summary: 单独解锁h5支付宝支付渠道
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlipayH5PayFeedRequest'
      responses:
        '200':
          description: dummy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlipayOrderResponse'
  /api/v1/feeds/{id}/iosPay:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    get:
      parameters:
        - $ref: '#/components/parameters/versionInQuery'
      tags:
        - Payment
      summary: 单独解锁动态IOS跳转
      responses:
        '200':
          description: H5 跳转地址
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/H5RedirectResponse'
  /api/v1/users/password:
    put:
      tags:
        - User
      summary: 更新当前用户的密码
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserPasswordRequest'
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /api/v1/feeds/{id}/feedgroups:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    put:
      tags:
        - Feed
      summary: 更新动态的作品集信息
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutFeedFeedgroupRequest'
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullFeedResponse'
  /api/v1/income/greetings:
    get:
      tags:
        - Income
      summary: 问候语
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingsResponse'
  /api/v1/income/profile:
    get:
      tags:
        - Income
      summary: 收入概况
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeProfileResponse'
  /api/v1/income/supportList:
    get:
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Income
      summary: 支持榜列表
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeSupportsResponse'
  /api/v1/income/currentMonth:
    get:
      tags:
        - Income
      summary: 本月支持详情
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentMonthSupportResponse'
  /api/v1/income/monthly:
    get:
      tags:
        - Income
      summary: 收入概况-明细
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeMonthlyResponse'
  /api/v1/income/detailByCondition:
    get:
      parameters:
        - $ref: '#/components/parameters/incomeTypeInQuery'
        - $ref: '#/components/parameters/timestampInQuery'
        - $ref: '#/components/parameters/membershipIdOptionalInQuery'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - Income
      summary: 收入概况-明细（按月查询或按会员查询）
      responses:
        '200':
          description: update user password response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeDetailsResponse'
  /api/v1/banners/creator:
    get:
      tags:
        - Banner
      summary: 获取创作者专属banner
      responses:
        '200':
          description: banner response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BannersResponse'
  /api/v1/banners/follow:
    get:
      tags:
        - Banner
      summary: 获取超级关注banner
      responses:
        '200':
          description: banner response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BannersResponse'
  /api/v1/follow/profile/weibo:
    get:
      parameters:
        - $ref:  "#/components/parameters/nickNameInQuery"
      tags:
        - Follow
      summary: 根据微博昵称获取微博信息
      responses:
        '200':
          description: weibo profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeiboProfileResponse'
  /api/v1/follow/subscribe:
    get:
      tags:
        - Follow
      summary: 获取超级关注
      responses:
        '200':
          description: subscribe response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowResponse'
    post:
      tags:
        - Follow
      summary: 创建超级关注
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref:  '#/components/schemas/PostFollowRequest'
      responses:
        '200':
          description: subscribe response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFollowResponse'
    delete:
      parameters:
        - $ref:  "#/components/parameters/followTypeInQuery"
      tags:
        - Follow
      summary: 删除超级关注
      responses:
        '200':
          description: unsubscribe response
          content:
            application/json:
              schema:
                $ref:   '#/components/schemas/DummyResponse'
  /api/v1/feedCollections:
    get:
      parameters:
        - $ref: '#/components/parameters/timestampAfter'
        - $ref: '#/components/parameters/timestampBefore'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - FeedCollection
      summary: 查看收藏夹的动态
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelinesResponse'
  /api/v1/feeds/{id}/feedCollections:
    parameters:
      - $ref: '#/components/parameters/idInPath'
    post:
      tags:
        - FeedCollection
      summary: 添加feed到收藏夹
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
    delete:
      tags:
        - FeedCollection
      summary: 从收藏夹中移除feed
      responses:
        '200':
          description: common response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    forLoginInQuery:
      in: query
      name: login
      required: false
      schema:
        type: boolean
        default: false
    idInPath:
      in: path
      name: id
      description: id
      required: true
      schema:
        type: string
    codeInQuery:
      in: query
      name: code
      description: code
      required: true
      schema:
        type: string
    mediaTypeInQuery:
      in: query
      name: type
      description: 动态类型
      required: false
      schema:
        $ref: '#/components/schemas/MultiMediaType'
    timestampAfter:
      in: query
      name: minTimestamp
      description: timestamp after
      required: false
      schema:
        type: integer
        format: int64
    timestampBefore:
      in: query
      name: maxTimestamp
      description: timestamp before
      required: false
      schema:
        type: integer
        format: int64
    page:
      in: query
      name: page
      description: page number
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
    pageSize:
      in: query
      name: pageSize
      description: size of a page
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
    largePageSize:
      in: query
      name: pageSize
      description: size of a page
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 3000
        default: 10
    islandidInPath:
      in: query
      name: islandId
      description: island id
      required: false
      schema:
        type: string
    islandIdInQueryOptional:
      in: query
      name: islandId
      description: island id
      required: false
      schema:
        type: string
    fromHostInQuery:
      in: query
      name: fromHost
      required: false
      schema:
        type: boolean
    nameInQuery:
      in: query
      name: name
      description: name
      required: true
      schema:
        type: string
    nameInQueryOptional:
      in: query
      name: name
      description: name
      required: false
      schema:
        type: string
    subscribedInQuery:
      in: query
      name: subscribed
      description: whether subscribed
      required: false
      schema:
        type: boolean
    fileNameInQuery:
      in: query
      name: fileName
      description: fileName
      required: true
      schema:
        type: string
    notificationTypeInQuery:
      in: query
      name: type
      required: false
      schema:
        $ref: '#/components/schemas/NotificationType'
    noticeTypeInQuery:
      in: query
      name: noticeType
      required: false
      schema:
        $ref: '#/components/schemas/NoticeType'
    isRevokeInQuery:
      in: query
      name: isRevoke
      description: whether is revoking a reaction
      required: false
      schema:
        type: boolean
        default: false
    canSaveInQuery:
      in: query
      name: canSave
      description: can save feed content
      required: false
      schema:
        type: boolean
        default: false
    configTypeInQuery:
      in: query
      name: configType
      required: true
      schema:
        $ref: '#/components/schemas/ConfigType'
    versionInQuery:
      in: query
      name: version
      required: true
      schema:
        type: integer
    permanentInQuery:
      in: query
      name: permanent
      required: false
      schema:
        type: boolean
        default: false
    channelInQuery:
      in: query
      name: channel
      required: false
      schema:
        type: string
    refererIdInQuery:
      in: query
      name: refererId
      required: true
      schema:
        type: string
    videoIdInQuery:
      in: query
      name: videoId
      required: true
      schema:
        type: string
    membershipIdInQuery:
      in: query
      name: membershipId
      required: true
      schema:
        type: string
    membershipIdOptionalInQuery:
      in: query
      name: membershipId
      required: false
      schema:
        type: string
    timestampInQuery:
      in: query
      name: timestamp
      required: false
      schema:
        type: integer
        format: int64
    sceneIdInQuery:
      in: query
      name: sceneId
      required: true
      schema:
        type: string
    deviceTypeInQuery:
      in: query
      name: deviceType
      required: true
      schema:
        $ref: '#/components/schemas/DeviceType'
    sceneTypeInQuery:
      in: query
      name: sceneType
      required: true
      schema:
        $ref: '#/components/schemas/SceneType'
    hasAnswerInQuery:
      in: query
      name: answered
      required: false
      schema:
        type: boolean
    hasMembershipInQuery:
      in: query
      name: hasMembership
      required: false
      schema:
        type: boolean
    complimentaryInQuery:
      in: query
      name: paid
      required: false
      schema:
        type: boolean
    includeChargeableInQuery:
      in: query
      name: includeChargeable
      required: false
      schema:
        type: boolean
        default: false
    forAdminLoginInQuery:
      in: query
      name: admin
      required: false
      schema:
        type: boolean
        default: false
    incomeTypeInQuery:
      in: query
      name: type
      required: true
      schema:
        $ref: '#/components/schemas/IncomeType'
    followTypeInQuery:
      in: query
      name: type
      required: true
      schema:
        $ref:  '#/components/schemas/FollowType'
    nickNameInQuery:
      in: query
      name: name
      required: true
      schema:
        type: string
    isWorksInQuery:
      in: query
      name: isWorks
      required: false
      schema:
        type: boolean
  schemas:
    LoginType:
      type: string
      enum:
        - LOGIN_OAUTH_WECHAT
        - LOGIN_OAUTH_MP_WECHAT
        - LOGIN_PASSWORD
        - LOGIN_JWT_IOS
        - LOGIN_MOBILE
        - LOGIN_MOBILE_APP
        - LOGIN_MOBILE_HOME
    MembershipIconType:
      type: string
      enum:
        - ICON_FEED
        - ICON_QUESTION
        - ICON_GROUP
        - ICON_MESSAGE
    SceneType:
      type: string
      enum:
        - SCENE_IOS
        - SCENE_ANDROID
        - SCENE_WAP
    ConfigType:
      type: string
      enum:
        - CONFIG_IOS
        - CONFIG_ANDROID
    ReactionType:
      type: string
      enum:
        - REACTION_LIKE
    IslandAccessType:
      type: string
      enum:
        - ISLAND_ACCESS_PUBLIC
        - ISLAND_ACCESS_PRIVATE
    GenderType:
      type: integer
      minimum: 0
      maximum: 3
      enum:
        - 0
        - 1
        - 2
        - 3
    NotificationType:
      type: string
      enum:
        - NOTIFICATION_COMMENTS
        - NOTIFICATION_REACTIONS
        - NOTIFICATION_SYSTEM_NOTICE
        - NOTIFICATION_ISLAND_NOTICE
        - NOTIFICATION_BOX_NOTICE
    IdentityType:
      type: string
      enum:
        - IDENTITY_VIDEO
        - IDENTITY_MUSIC
        - IDENTITY_PAINTING
        - IDENTITY_WRITING
        - IDENTITY_GAMING
        - IDENTITY_PHOTOGRAPH
        - IDENTITY_VLOG
        - IDENTITY_DANCING
        - IDENTITY_GEEK
        - IDENTITY_TRAVEL
        - IDENTITY_FOOD
        - IDENTITY_FASHION
        - IDENTITY_COMIC
        - IDENTITY_OTHERS
    WithdrawState:
      type: string
      enum:
        - STATE_PROCESSING
        - STATE_SETTLED
    FollowBotState:
      type: string
      enum:
        - ENABLED
        - SUSPEND
        - NONE
    OrderState:
      type: string
      enum:
        - STATE_NOTPAY
        - STATE_USERPAYING
        - STATE_SUCCESS
        - STATE_CLOSED
        - STATE_REFUND
        - STATE_PAYERROR
        - STATE_REVOKED
    PrivilegeState:
      type: string
      enum:
        - PRIVILEGE_NONE
        - PRIVILEGE_EFFECTIVE
        - PRIVILEGE_EXPIRE
    NoticeType:
      type: string
      enum:
        - ISLAND_NOTICE_NEW_SUBSCRIBER
        - ISLAND_NOTICE_NEW_MEMBER
        - BOX_NOTICE_NEW_QUESTION
        - BOX_NOTICE_NEW_ANSWER
    MultiMediaType:
      type: string
      enum:
        - MULTIMEDIA_TYPE_TEXT
        - MULTIMEDIA_TYPE_PICS
        - MULTIMEDIA_TYPE_ALBUM
        - MULTIMEDIA_TYPE_VIDEO
        - MULTIMEDIA_TYPE_AUDIO
        - MULTIMEDIA_TYPE_HTML
        - MULTIMEDIA_TYPE_QUESTION
    DeviceType:
      type: string
      enum:
        - DEVICE_TYPE_UNKNOWN
        - DEVICE_TYPE_IOS
        - DEVICE_TYPE_ANDROID
    PaymentType:
      type: string
      enum:
        - PAYMENT_TYPE_MEMBERSHIP
        - PAYMENT_TYPE_FEED
        - PAYMENT_TYPE_SPONSOR
    SupportTargetType:
      type: string
      enum:
        - SUPPORTER
        - AMOUNT
    SupportTargetTimeType:
      type: string
      enum:
        - NO_LIMIT
        - PER_MONTH
    IncomeType:
      type: string
      enum:
        - INCOME_MONTH
        - INCOME_MEMBERSHIP
        - INCOME_SUPPORT
        - INCOME_FEED_CHARGE
    FollowType:
      type: string
      enum:
        - WEIBO
        - TIKTOK
        - BILIBILI
    CommonResponse:
      type: object
      properties:
        rtn:
          type: integer
          description: return code
        msg:
          type: string
          description: return message
    DummyResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: string
    PageInfo:
      type: object
      properties:
        hasMore:
          type: boolean
          description: if it has more pages
        hasContent:
          type: boolean
          description: if it has content in current page
        page:
          type: integer
          description: page number
        pageSize:
          type: integer
          description: page size
        total:
          type: integer
          description: total size
    BriefUserDTO:
      type: object
      properties:
        id:
          type: string
        displayId:
          type: string
        name:
          type: string
        portraitImageUri:
          type: string
        gender:
          $ref: '#/components/schemas/GenderType'
        age:
          type: integer
        identityTypes:
          type: array
          items:
            $ref: '#/components/schemas/IdentityType'
    UserDTO:
      allOf:
        - $ref: '#/components/schemas/BriefUserDTO'
        - type: object
          properties:
            description:
              type: string
            city:
              type: string
            createdAt:
              type: integer
              format: int64
            birthday:
              type: string
              format: date
            code:
              type: string
            mobile:
              type: string
            hasPassword:
              type: boolean
    FullUserDTO:
      allOf:
        - $ref: '#/components/schemas/UserDTO'
        - type: object
          properties:
            createdIslands:
              type: array
              items:
                $ref: '#/components/schemas/BriefIslandDTO'
    PutUserPayload:
      type: object
      properties:
        name:
          type: string
        gender:
          $ref: '#/components/schemas/GenderType'
        description:
          type: string
        city:
          type: string
        birthday:
          type: string
          format: date
        identityTypes:
          type: array
          items:
            $ref: '#/components/schemas/IdentityType'
    PutUserRequest:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/PutUserPayload'
        portraitImage:
          type: string
          format: binary
    PutUserRequestV2:
      type: object
      properties:
        name:
          type: string
        gender:
          $ref: '#/components/schemas/GenderType'
        description:
          type: string
        city:
          type: string
        birthday:
          type: string
          format: date
        identityTypes:
          type: array
          items:
            $ref: '#/components/schemas/IdentityType'
        portraitImageUri:
          type: string
    UserResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UserDTO'
    FullUserResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FullUserDTO'
    UsersResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserDTO'
    BriefUsersResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/BriefUserDTO'
    BriefIslandDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        hostId:
          type: string
        portraitImageUri:
          type: string
        description:
          type: string
        accessType:
          $ref: '#/components/schemas/IslandAccessType'
        customUrl:
          type: string
    PosterIslandDTO:
      type: object
      properties:
        island:
          $ref: '#/components/schemas/FullIslandDTO'
        host:
          $ref: '#/components/schemas/BriefUserDTO'
        referer:
          $ref: '#/components/schemas/BriefUserDTO'
        feeds:
          type: array
          items:
            $ref: '#/components/schemas/PosterFeedDTO'
    IslandDTO:
      allOf:
        - $ref: '#/components/schemas/BriefIslandDTO'
        - type: object
          properties:
            secret:
              type: string
            host:
              $ref: '#/components/schemas/BriefUserDTO'
            memberCount:
              type: integer
    RecommendIslandDTO:
      allOf:
        - $ref: '#/components/schemas/IslandDTO'
        - type: object
          properties:
            host:
              $ref: '#/components/schemas/BriefUserDTO'
            memberCount:
              type: integer
            recommendation:
              type: string
            showIncome:
              type: boolean
            supportCount:
              type: integer
            centsInMonth:
              type: integer
              format: int64
    FullIslandDTO:
      allOf:
        - $ref: '#/components/schemas/IslandDTO'
        - type: object
          properties:
            supportTargets:
              type: array
              items:
                $ref: '#/components/schemas/SupportTargetDTO'
            showIncome:
              type: boolean
            supportCount:
              type: integer
            centsInMonth:
              type: integer
              format: int64
    HostIntroductionDTO:
      type: object
      properties:
        shouldPopup:
          type: boolean
        pres:
          $ref: '#/components/schemas/IntroPrerequestsDTO'
    IntroPrerequestsDTO:
      type: object
      properties:
        hasFeeds:
          type: boolean
        hasReposts:
          type: boolean
        hasMemberships:
          type: boolean
    IntroductionDTO:
      type: object
      properties:
        shouldPopup:
          type: boolean
        title:
          type: string
        content:
          type: string
    IslandProfileDTO:
      type: object
      properties:
        island:
          $ref: '#/components/schemas/FullIslandDTO'
        host:
          $ref: '#/components/schemas/UserDTO'
        userIndex:
          type: string
        subscribed:
          type: boolean
        subscribedAt:
          type: integer
          format: int64
        hasGroupchatAccess:
          type: boolean
        showPrivilege:
          type: boolean
        privilegeState:
          $ref: '#/components/schemas/PrivilegeState'
        hostIntroduction:
          $ref: '#/components/schemas/HostIntroductionDTO'
        subscriberIntroduction:
          $ref: '#/components/schemas/IntroductionDTO'
        introduction:
          $ref: '#/components/schemas/IntroductionDTO'
    CheckIslandDTO:
      type: object
      properties:
        isExisted:
          type: boolean
        innerMsg:
          type: string
    PutIslandPayload:
      type: object
      properties:
        name:
          type: string
          description: island name
        description:
          type: string
          description: descriptions
        showIncome:
          type: boolean
        secret:
          type: string
          description: secrets for joining island
        islandAccessType:
          $ref: '#/components/schemas/IslandAccessType'
        customUrl:
          type: string
    PostIslandPayload:
      type: object
      properties:
        name:
          type: string
          description: island name
        secret:
          type: string
          description: secrets for joining island
        identityId:
          type: string
        islandAccessType:
          $ref: "#/components/schemas/IslandAccessType"
      required:
        - name
    PostIslandPayloadV11:
      type: object
      properties:
        name:
          type: string
          description: island name
        secret:
          type: string
          description: secrets for joining island
        identityId:
          type: string
        description:
          type: string
        islandAccessType:
          $ref: "#/components/schemas/IslandAccessType"
        customUrl:
          type: string
      required:
        - name
        - description
    PutIslandRequest:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/PutIslandPayload'
        portraitImage:
          type: string
          description: portrait image
          format: binary
    PutIslandRequestV2:
      type: object
      properties:
        name:
          type: string
          description: island name
        description:
          type: string
          description: descriptions
        showIncome:
          type: boolean
        secret:
          type: string
          description: secrets for joining island
        islandAccessType:
          $ref: '#/components/schemas/IslandAccessType'
        customUrl:
          type: string
        portraitImageUri:
          type: string
    PostIslandRequest:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/PostIslandPayload'
        portraitImage:
          type: string
          description: portrait image
          format: binary
      required:
        - payload
    PostIslandRequestV11:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/PostIslandPayloadV11'
        portraitImage:
          type: string
          description: portrait image
          format: binary
      required:
        - payload
    PostIslandRequestV2:
      type: object
      properties:
        name:
          type: string
          description: island name
        secret:
          type: string
          description: secrets for joining island
        identityId:
          type: string
        description:
          type: string
        islandAccessType:
          $ref: "#/components/schemas/IslandAccessType"
        customUrl:
          type: string
        portraitImageUri:
          type: string
      required:
        - name
        - description
    SubscribeIslandRequest:
      type: object
      properties:
        secret:
          type: string
          description: island secret
    MediaUrlsRequest:
      type: object
      properties:
        fileNames:
          type: array
          items:
            type: string
      required:
        - fileNames
    CheckIslandResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/CheckIslandDTO'
    BriefIslandResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BriefIslandDTO'
    IslandPosterResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/PosterIslandDTO'
    IslandProfileResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IslandProfileDTO'
    IslandResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IslandDTO'
    IslandProfilesResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IslandProfileDTO'
    BriefIslandsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/BriefIslandDTO'
    IslandsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/IslandDTO'
    ReportDTO:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        feedId:
          type: string
        islandId:
          type: string
        userId:
          type: string
        reporterId:
          type: string
        messageId:
          type: string
    PostReportRequest:
      type: object
      properties:
        reportType:
          type: string
          description: feedback content
        feedId:
          type: string
          description: feed id to report
        feedGroupId:
          type: string
        islandId:
          type: string
          description: island id to report
        userId:
          type: string
          description: user id to report
        messageId:
          type: string
          description: rongyun message id
      required:
        - reportType
    ReportResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ReportDTO'
    HtmlDTO:
      type: object
      properties:
        content:
          type: string
    AudioDTO:
      type: object
      properties:
        url:
          type: string
        title:
          type: string
        videoId:
          type: string
        thumbnailUrl:
          type: string
        length:
          type: integer
    VideoDTO:
      type: object
      properties:
        url:
          type: string
        title:
          type: string
        videoId:
          type: string
        thumbnailUrl:
          type: string
        length:
          type: integer
        width:
          type: integer
        height:
          type: integer
    PictureDTO:
      type: object
      properties:
        url:
          type: string
        width:
          type: integer
        height:
          type: integer
        size:
          type: integer
          format: int64
    AnswerDTO:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        text:
          type: string
        hasExpired:
          type: boolean
        publicVisible:
          type: boolean
        answeredAt:
          type: integer
          format: int64
        ignored:
          type: boolean
    MultiMediaDTO:
      oneOf:
        - $ref: '#/components/schemas/VideoDTO'
        - $ref: '#/components/schemas/PictureDTO'
        - $ref: '#/components/schemas/AudioDTO'
        - $ref: '#/components/schemas/HtmlDTO'
        - $ref: '#/components/schemas/AnswerDTO'
    PosterFeedDTO:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        imagesUris:
          type: array
          items:
            type: string
        createdAt:
          type: integer
          format: int64
    BriefFeedDTO:
      type: object
      properties:
        id:
          type: string
        island:
          $ref: '#/components/schemas/BriefIslandDTO'
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        title:
          type: string
        text:
          type: string
        brief:
          type: string
        isWorks:
          type: boolean
        isCollected:
          type: boolean
        imagesUris:
          type: array
          items:
            type: string
        priceInCents:
          type: integer
          format: int64
        mediaType:
          $ref: '#/components/schemas/MultiMediaType'
        multimedia:
          type: array
          items:
            $ref: '#/components/schemas/MultiMediaDTO'
        fromHost:
          type: boolean
          description: whether feed posted by the host of island
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentDTO'
        toppedAt:
          type: integer
          format: int64
        createdAt:
          type: integer
          format: int64
    SnapshotFeedDTO:
      allOf:
        - $ref: '#/components/schemas/BriefFeedDTO'
        - type: object
          properties:
            isDeleted:
              type: boolean
            isSubscribed:
              type: boolean
            isAccess:
              type: boolean
    SimpleQuestionBoxDTO:
      type: object
      properties:
        noticeType:
          $ref: '#/components/schemas/NoticeType'
        feedId:
          type: string
        text:
          type: string
        priceInCents:
          type: integer
          format: int64
    SimpleMembershipDTO:
      type: object
      properties:
        id:
          type: string
        membershipName:
          type: string
        colorType:
          type: integer
        pricePerMonthInCents:
          type: integer
          format: int64
        isActive:
          type: boolean
    FeedDTO:
      allOf:
        - $ref: '#/components/schemas/BriefFeedDTO'
        - type: object
          properties:
            likesCount:
              type: integer
            commentsCount:
              type: integer
            repostCount:
              type: integer
            isLiked:
              type: boolean
            isAccess:
              type: boolean
            isMembership:
              type: boolean
            isChargeable:
              type: boolean
            isTop:
              type: boolean
            canSave:
              type: boolean
            recommendatedAt:
              type: integer
              format: int64
            membership:
              $ref: '#/components/schemas/SimpleMembershipDTO'
            membershipList:
              type: array
              items:
                $ref: '#/components/schemas/SimpleMembershipDTO'
            feedGroupInfo:
              $ref: '#/components/schemas/FeedGroupInfo'
    FeedGroupInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastFeedId:
          type: string
        nextFeedId:
          type: string
    FullFeedDTO:
      allOf:
        - $ref: '#/components/schemas/FeedDTO'
        - type: object
          properties:
            host:
              $ref: '#/components/schemas/BriefUserDTO'
    PostFeedPayload:
      type: object
      properties:
        islandIds:
          type: array
          items:
            type: string
        membershipIds:
          type: array
          items:
            type: string
        content:
          type: string
    PostFeedRequest:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/PostFeedPayload'
        images:
          type: array
          items:
            type: string
            format: binary
      required:
        - payload
    PostFeedRequestV2:
      type: object
      properties:
        islandIds:
          type: array
          items:
            type: string
        membershipIds:
          type: array
          items:
            type: string
        priceInCents:
          type: integer
          format: int64
        text:
          type: string
        mediaType:
          $ref: '#/components/schemas/MultiMediaType'
        multimedia:
          type: array
          items:
            $ref: '#/components/schemas/MultiMediaDTO'
        feedGroupId:
          type: string
        isWorks:
          type: boolean
    PutFeedRequest:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        brief:
          type: string
    PostIslandFeedRequest:
      type: object
      properties:
        membershipIds:
          type: array
          items:
            type: string
        priceInCents:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
        brief:
          type: string
        mediaType:
          $ref: '#/components/schemas/MultiMediaType'
        multimedia:
          type: array
          items:
            $ref: '#/components/schemas/MultiMediaDTO'
        feedGroupId:
          type: string
        isWorks:
          type: boolean
    CheckFeedsMessage:
      type: object
      properties:
        islandId:
          type: string
        timestamp:
          type: integer
          format: int64
    PostCheckFeedsRequest:
      type: object
      properties:
        checkFeedsMessage:
          type: array
          items:
            $ref: '#/components/schemas/CheckFeedsMessage'
    CheckFeedsDTO:
      type: object
      properties:
        islandId:
          type: string
        hasNew:
          type: boolean
    PostCheckFeedsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/CheckFeedsDTO'
    FeedResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FeedDTO'
    TimelinesResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            currentTime:
              type: integer
              format: int64
            hasFeedgroup:
              type: boolean
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeedDTO'
    FeedsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            currentTime:
              type: integer
              format: int64
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeedDTO'
    ToppedFeedsDTO:
      type: object
      properties:
        feeds:
          type: array
          items:
            $ref: '#/components/schemas/FeedDTO'
        toppedFeeds:
          type: array
          items:
            $ref: '#/components/schemas/FeedDTO'
    FeedsResponseV2:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            currentTime:
              type: integer
              format: int64
            hasFeedgroup:
              type: boolean
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              $ref: '#/components/schemas/ToppedFeedsDTO'
    CommentDTO:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        feedId:
          type: string
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        replyTo:
          $ref: '#/components/schemas/BriefUserDTO'
        createdAt:
          type: integer
          format: int64
    PostCommentRequest:
      type: object
      properties:
        content:
          type: string
        replyToId:
          type: string
      required:
        - content
    CommentResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/CommentDTO'
    CommentsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/CommentDTO'
    ReactionDTO:
      type: object
      properties:
        id:
          type: string
        feedId:
          type: string
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        reactionType:
          type: array
          items:
            $ref: '#/components/schemas/ReactionType'
        createdAt:
          type: integer
          format: int64
    PostReactionRequest:
      type: object
      properties:
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/ReactionType'
      required:
        - reactionType
    ReactionResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ReactionDTO'
    ReactionsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/ReactionDTO'
    NotificationDTO:
      oneOf:
        - $ref: '#/components/schemas/CommentNotificationDTO'
        - $ref: '#/components/schemas/ReactionNotificationDTO'
        - $ref: '#/components/schemas/NoticeNotificationDTO'
        - $ref: '#/components/schemas/SystemNotificationDTO'
        - $ref: '#/components/schemas/BoxNotificationDTO'
    NoticeDTO:
      oneOf:
        - $ref: '#/components/schemas/SubscribeNoticeDTO'
        - $ref: '#/components/schemas/MemberNoticeDTO'
    SystemNotificationDTO:
      type: object
      properties:
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        systemNotice:
          $ref: '#/components/schemas/SystemNoticeDTO'
    SystemNoticeDTO:
      type: object
      properties:
        name:
          type: string
        portraitImageUri:
          type: string
        content:
          type: string
    SubscribeNoticeDTO:
      type: object
      properties:
        noticeType:
          $ref: '#/components/schemas/NoticeType'
        island:
          $ref: '#/components/schemas/BriefIslandDTO'
        subscriber:
          $ref: '#/components/schemas/BriefUserDTO'
    MemberNoticeDTO:
      type: object
      properties:
        noticeType:
          $ref: '#/components/schemas/NoticeType'
        island:
          $ref: '#/components/schemas/BriefIslandDTO'
        member:
          $ref: '#/components/schemas/BriefUserDTO'
        membership:
          $ref: '#/components/schemas/SkuMembershipDTO'
        priceInCents:
          type: integer
          format: int64
        content:
          type: string
    SkuMembershipDTO:
      allOf:
        - $ref: '#/components/schemas/BriefMembershipDTO'
        - type: object
          properties:
            priceInCents:
              type: integer
              format: int64
            timeInMonths:
              type: integer
    BoxNotificationDTO:
      type: object
      properties:
        id:
          type: string
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        question:
          $ref: '#/components/schemas/SimpleQuestionBoxDTO'
        hasRead:
          type: boolean
        createdAt:
          type: integer
          format: int64
    ReactionNotificationDTO:
      type: object
      properties:
        id:
          type: string
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        feed:
          $ref: '#/components/schemas/SnapshotFeedDTO'
        reactions:
          $ref: '#/components/schemas/ReactionDTO'
        hasRead:
          type: boolean
        createdAt:
          type: integer
          format: int64
    CommentNotificationDTO:
      type: object
      properties:
        id:
          type: string
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        feed:
          $ref: '#/components/schemas/SnapshotFeedDTO'
        comment:
          $ref: '#/components/schemas/CommentDTO'
        hasRead:
          type: boolean
        createdAt:
          type: integer
          format: int64
    NoticeNotificationDTO:
      type: object
      properties:
        id:
          type: string
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        notice:
          $ref: '#/components/schemas/NoticeDTO'
        hasRead:
          type: boolean
        createdAt:
          type: integer
          format: int64
    UnreadIslandNoticesCountDTO:
      type: object
      properties:
        UnreadNewSubscriberNoticeCount:
          type: integer
        UnreadNewMemberNoticeCount:
          type: integer
    UnreadQuestsionNoticesCountDTO:
      type: object
      properties:
        UnreadQuestionsNoticeCount:
          type: integer
        UnreadAnswersNoticeCount:
          type: integer
    UnreadNotificationCountDTO:
      type: object
      properties:
        hasUnread:
          type: boolean
        UnreadCommentsCount:
          type: integer
        UnreadReactionsCount:
          type: integer
        UnreadIslandNoticesCount:
          type: integer
    UnreadNotificationCountDTOV2:
      type: object
      properties:
        hasUnread:
          type: boolean
        UnreadCommentsCount:
          type: integer
        UnreadReactionsCount:
          type: integer
        UnreadBoxesCount:
          $ref: '#/components/schemas/UnreadQuestsionNoticesCountDTO'
        UnreadIslandNoticesCountDTO:
          $ref: '#/components/schemas/UnreadIslandNoticesCountDTO'
    UploadUrlDTO:
      type: object
      properties:
        objectName:
          type: string
        url:
          type: string
    OssSignatureDTO:
      type: object
      properties:
        accessid:
          type: string
        policy:
          type: string
        signature:
          type: string
        host:
          type: string
        expire:
          type: integer
          format: int64
        objectNames:
          type: array
          items:
            type: string
    UploadUrlListResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UploadUrlDTO'
    OssSignatureResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/OssSignatureDTO'
    NotificationsCountResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UnreadNotificationCountDTO'
    NotificationsCountResponseV2:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UnreadNotificationCountDTOV2'
    NotificationsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/NotificationDTO'
    RepostDTO:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        feedId:
          type: string
        islandId:
          type: string
        questionId:
          type: string
        isSuccessful:
          type: boolean
        userId:
          type: string
        createdAt:
          type: integer
          format: int64
    PostRepostRequest:
      type: object
      properties:
        content:
          type: string
        isSuccessful:
          type: boolean
      required:
        - reactionType
    RepostResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/RepostDTO'
    RepostsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/RepostDTO'
    WechatOAuthLoginPayload:
      type: object
      properties:
        code:
          type: string
    PasswordLoginPayload:
      type: object
      properties:
        code:
          type: string
        username:
          type: string
        password:
          type: string
    MobileLoginPayload:
      type: object
      properties:
        code:
          type: string
        mobile:
          type: string
        otp:
          type: integer
    LoginPayload:
      oneOf:
        - $ref: '#/components/schemas/WechatOAuthLoginPayload'
        - $ref: '#/components/schemas/PasswordLoginPayload'
        - $ref: '#/components/schemas/MobileLoginPayload'
    PostLoginRequest:
      type: object
      properties:
        loginType:
          $ref: '#/components/schemas/LoginType'
        data:
          $ref: '#/components/schemas/LoginPayload'
      required:
        - loginType
        - data
    PostRefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    LoginResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/LoginTokenInfo'
    RefreshTokenResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BriefTokenInfo'
    BriefTokenInfo:
      type: object
      properties:
        token:
          type: string
        refreshToken:
          type: string
        openId:
          type: string
    LoginTokenInfo:
      allOf:
        - $ref: '#/components/schemas/BriefTokenInfo'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/FullUserDTO'
    IOSConfigurationDTO:
      type: object
      properties:
        islandFeedLoopInterval:
          type: integer
        myIslandsPageSize:
          type: integer
        messageLoopInterval:
          type: integer
        guestPageSize:
          type: integer
        islandCheckInterval:
          type: integer
        configTimeout:
          type: integer
        audit:
          type: boolean
        showSuperFollowBot:
          type: boolean
    AndroidConfigurationDTO:
      type: object
      properties:
        audit:
          type: boolean
        isAccountLogin:
          type: boolean
        showSuperFollowBot:
          type: boolean
    ConfigurationDTO:
      oneOf:
        - $ref: '#/components/schemas/IOSConfigurationDTO'
        - $ref: '#/components/schemas/AndroidConfigurationDTO'
    ConfigurationDTOV2:
      type: object
      properties:
        showSuperFollowBot:
          type: boolean
    ConfigurationResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ConfigurationDTO'
    ConfigurationResponseV2:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ConfigurationDTOV2'
    UpdateInfoDTO:
      type: object
      properties:
        shouldForce:
          type: boolean
        isLatest:
          type: boolean
        address:
          type: string
        message:
          type: string
        currentVersion:
          type: integer
        nextVersion:
          type: integer
    IOSUpdateInfoResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UpdateInfoDTO'
    AndroidUpdateInfoResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UpdateInfoDTO'
    SetupInfoDTO:
      type: object
      properties:
        version:
          type: integer
        address:
          type: string
        showSuperFollowBot:
          type: boolean
    AndroidSetupInfoResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SetupInfoDTO'
    TopFeedRequest:
      type: object
      properties:
        feedId:
          type: string
        isRevoke:
          type: boolean
    PostIOSOrderRequest:
      type: object
      properties:
        shellSkuId:
          type: string
        receipt:
          type: string
        transactionId:
          type: string
      required:
        - shellSkuId
        - receipt
    PostIOSMembershipSubscriptionRequest:
      type: object
      properties:
        membershipSkuId:
          type: string
        receipt:
          type: string
        transactionId:
          type: string
      required:
        - membershipSkuId
        - receipt
        - transactionId
    PostWechatOrderRequest:
      type: object
      properties:
        shellSkuId:
          type: string
        openId:
          type: string
    WechatOrderDTO:
      type: object
      properties:
        id:
          type: string
        nonceStr:
          type: string
        appId:
          type: string
        partnerId:
          type: string
        prepayId:
          type: string
        signature:
          type: string
        userId:
          type: string
        feeInCents:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
        state:
          $ref: '#/components/schemas/OrderState'
        mwebUrl:
          type: string
    WechatOrderResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/WechatOrderDTO'
    SubscribeMemberRequest:
      type: object
      properties:
        membershipSkuId:
          type: string
      required:
        - membershipSkuId
    AlipayH5SubscribeMemberRequest:
      type: object
      properties:
        membershipSkuId:
          type: string
        quit_url:
          type: string
        return_url:
          type: string
      required:
        - membershipSkuId
        - quit_url
        - return_url
    BalanceDTO:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        balanceInCents:
          type: integer
          format: int64
        balanceEligibleInCents:
          type: integer
          format: int64
        balanceInShells:
          type: integer
          format: int64
    BalanceResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BalanceDTO'
    BillingInfoDTO:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        name:
          type: string
        mobile:
          type: string
        identityNumber:
          type: string
        account:
          type: string
        idFrontUrl:
          type: string
        idBackUrl:
          type: string
        verified:
          type: boolean
    BillingInfoDTOV11:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        name:
          type: string
        mobile:
          type: string
        alipayAccount:
          type: string
        verified:
          type: boolean
    PutBillingInfoRequest:
      type: object
      properties:
        name:
          type: string
        mobile:
          type: string
        identityNumber:
          type: string
        accountNumber:
          type: string
        idFrontUrl:
          type: string
        idBackUrl:
          type: string
      required:
        - name
        - mobile
        - identityNumber
        - accountNumber
    BillingInfoResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BillingInfoDTO'
    PutBillingInfoRequestV11:
      type: object
      properties:
        name:
          type: string
        mobile:
          type: string
        alipayAccount:
          type: string
    BillingInfoResponseV11:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BillingInfoDTOV11'
    IOSShellSkuDTO:
      type: object
      properties:
        id:
          type: string
        appleSkuId:
          type: string
        description:
          type: string
        shells:
          type: integer
          format: int64
        priceInCents:
          type: integer
          format: int64
        isDefault:
          type: boolean
    WechatShellSkuDTO:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        shells:
          type: integer
          format: int64
        priceInCents:
          type: integer
          format: int64
        isDefault:
          type: boolean
    IOSShellSkusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IOSShellSkuDTO'
    WechatShellSkusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/WechatShellSkuDTO'
    MembershipSkuDTO:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        membershipId:
          type: string
        isDefault:
          type: boolean
        timeInMonths:
          type: integer
        priceInCents:
          type: integer
          format: int64
        priceInShells:
          type: integer
          format: int64
        appleSkuId:
          type: string
        isPermanent:
          type: boolean
    MembershipSkusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/MembershipSkuDTO'
    PostWithdrawRequest:
      type: object
      properties:
        amountInCents:
          type: integer
          format: int64
          minimum: 100
    DeviceTokenRequest:
      type: object
      properties:
        isBind:
          type: boolean
        deviceToken:
          type: string
        deviceType:
          type: integer
      required:
        - isBind
        - deviceToken
        - deviceType
    FeedMembershipDTO:
      type: object
      properties:
        id:
          type: string
        membershipName:
          type: string
        chargePerMonth:
          type: integer
        memberCount:
          type: integer
        isPermanent:
          type: boolean
        isActive:
          type: boolean
    MyMembershipDTO:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        host:
          $ref: '#/components/schemas/BriefUserDTO'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/WithExpiredMembershipDTO'
        icons:
          type: array
          items:
            $ref: '#/components/schemas/MembershipIconType'
    WithExpiredMembershipDTO:
      type: object
      properties:
        id:
          type: string
        membershipName:
          type: string
        isPermanent:
          type: boolean
        expireTime:
          type: integer
          format: int64
        hasExpired:
          type: boolean
        isActive:
          type: boolean
    BriefMembershipDTO:
      type: object
      properties:
        id:
          type: string
        hostId:
          type: string
        islandId:
          type: string
        membershipName:
          type: string
        description:
          type: array
          items:
            type: string
        chargePerMonth:
          type: integer
        colorType:
          type: integer
        useCustomMessage:
          type: boolean
        message:
          type: string
        isPermanent:
          type: boolean
        isActive:
          type: boolean
        image:
          $ref: '#/components/schemas/PictureDTO'
    MembershipDTO:
      allOf:
        - $ref: '#/components/schemas/BriefMembershipDTO'
        - type: object
          properties:
            memberCount:
              type: integer
            isTop:
              type: boolean
    PostMembershipRequest:
      type: object
      properties:
        description:
          type: array
          items:
            type: string
        chargePerMonth:
          type: integer
          minimum: 100
          maximum: 1000000000
        name:
          type: string
        useCustomMessage:
          type: boolean
        message:
          type: string
        isPermanent:
          type: boolean
        imageUri:
          type: string
        width:
          type: integer
        height:
          type: integer
        size:
          type: integer
          format: int64
    PutMembershipRequest:
      type: object
      properties:
        description:
          type: array
          items:
            type: string
        chargePerMonth:
          type: integer
          minimum: 100
          description: can only increase
        name:
          type: string
        useCustomMessage:
          type: boolean
        message:
          type: string
        isPermanent:
          type: boolean
        imageUri:
          type: string
        width:
          type: integer
        height:
          type: integer
        size:
          type: integer
          format: int64
    DeactivateMembershipRequest:
      type: object
      properties:
        isDeactivate:
          type: boolean
    MembershipResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BriefMembershipDTO'
    MembershipsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/MembershipDTO'
    FeedMembershipsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeedMembershipDTO'
    MyMembershipsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/MyMembershipDTO'
    ChatTokenDTO:
      type: object
      properties:
        token:
          type: string
    ChatTokenResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ChatTokenDTO'
    ChatAccessDTO:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDTO'
        createdIslandIds:
          type: array
          items:
            type: string
        hasAccess:
          type: boolean
    ChatAccessResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ChatAccessDTO'
    ChatGroupDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        island:
          $ref: '#/components/schemas/BriefIslandDTO'
        host:
          $ref: '#/components/schemas/BriefUserDTO'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/SimpleMembershipDTO'
        memberCount:
          type: integer
        bulletin:
          type: string
        isMuted:
          type: boolean
        hasJoined:
          type: boolean
        hasAccess:
          type: boolean
    PostChatGroupRequest:
      type: object
      properties:
        name:
          type: string
        bulletin:
          type: string
        membershipIds:
          type: array
          items:
            type: string
    PutChatGroupRequest:
      type: object
      properties:
        name:
          type: string
        bulletin:
          type: string
        membershipIds:
          type: array
          items:
            type: string
        isMuted:
          type: boolean
    ChatGroupResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ChatGroupDTO'
    IslandGroupedChatGroupDTO:
      type: object
      properties:
        island:
          $ref: '#/components/schemas/BriefIslandDTO'
        chatgroups:
          type: array
          items:
            $ref: '#/components/schemas/ChatGroupDTO'
    UserChatGroupsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IslandGroupedChatGroupDTO'
    IslandChatGroupsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/ChatGroupDTO'
    IslandChatAccessDTO:
      type: object
      properties:
        id:
          type: string
        islandId:
          type: string
        groupchatCount:
          type: integer
        memberCount:
          type: integer
        recentMembers:
          type: array
          items:
            $ref: '#/components/schemas/BriefUserDTO'
        hasAccess:
          type: boolean
    IslandChatAccessResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IslandChatAccessDTO'
    AvatarDTO:
      type: object
      properties:
        userId:
          type: string
        portraitUrl:
          type: string
    PostBatchGetUsersRequest:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
      required:
        - userIds
    AvatarsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AvatarDTO'
    OssTokenDTO:
      type: object
      properties:
        securityToken:
          type: string
        accessKey:
          type: string
        accessSecret:
          type: string
        expiration:
          type: integer
          format: int64
    OssTokenResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/OssTokenDTO'
    UserPaymentDTO:
      type: object
      properties:
        id:
          type: string
        host:
          $ref: '#/components/schemas/BriefUserDTO'
        membership:
          $ref: '#/components/schemas/BriefMembershipDTO'
        membershipSku:
          $ref: '#/components/schemas/MembershipSkuDTO'
        expiration:
          type: integer
          format: int64
        priceInCents:
          type: integer
          format: int64
        createdAt:
          type: integer
          format: int64
    UserPaymentDTOV11:
      type: object
      properties:
        id:
          type: string
        host:
          $ref: '#/components/schemas/BriefUserDTO'
        type:
          $ref: '#/components/schemas/PaymentType'
        name:
          type: string
        privileges:
          type: array
          items:
            type: string
        isPermanent:
          type: boolean
        timeInMonths:
          type: integer
        expiration:
          type: integer
          format: int64
        islandId:
          type: string
        priceInCents:
          type: integer
          format: int64
        createdAt:
          type: integer
          format: int64
        gift:
          $ref: '#/components/schemas/GiftImageDTO'
        giftCount:
          type: integer
    UserPaymentsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserPaymentDTO'
    UserPaymentsResponseV11:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserPaymentDTOV11'
    QrTicketDTO:
      type: object
      properties:
        ticket:
          type: string
        expirationInSec:
          type: integer
        sceneId:
          type: string
    QrTicketResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/QrTicketDTO'
    TutorialDTO:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    TutorialResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/TutorialDTO'
    IslandIdentityDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        iconUri:
          type: string
        colors:
          type: array
          items:
            type: string
    IslandIdentityResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IslandIdentityDTO'
    ChatUserDTO:
      allOf:
        - $ref: '#/components/schemas/BriefUserDTO'
        - type: object
          properties:
            memberships:
              type: array
              items:
                $ref: '#/components/schemas/BriefMembershipDTO'
    ChatUsersResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ChatUserDTO'
    IslandRepostCodeDTO:
      type: object
      properties:
        content:
          type: string
    IslandRepostCodeResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IslandRepostCodeDTO'
    CodeItemDTO:
      type: object
      properties:
        islandId:
          type: string
        secret:
          type: string
    ResolveIslandRepostCodeDTO:
      type: object
      properties:
        redirectUrl:
          type: string
        params:
          $ref: '#/components/schemas/CodeItemDTO'
    ResolveIslandRepostCodeResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ResolveIslandRepostCodeDTO'
    MediaUrlRequest:
      type: object
      properties:
        mediaTitle:
          type: string
        mediaFilename:
          type: string
      required:
        - mediaType
    UploadUrlResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UploadMediaDTO'
    RefreshVideoResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/UploadMediaDTO'
    UploadMediaDTO:
      type: object
      properties:
        videoId:
          type: string
        uploadAddress:
          type: string
        uploadAuth:
          type: string
    PostOTPRequest:
      type: object
      properties:
        code:
          type: string
        mobile:
          type: string
    PutUserMobileRequest:
      type: object
      properties:
        code:
          type: string
        mobile:
          type: string
        otp:
          type: integer
    FeedGroupDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        islandId:
          type: string
        host:
          $ref: '#/components/schemas/BriefUserDTO'
        lastFeedTimestamp:
          type: integer
          format: int64
        description:
          type: string
        thumbnailUri:
          type: string
        itemCount:
          type: integer
        imageUris:
          type: array
          items:
            type: string
    PostFeedGroupRequest:
      type: object
      properties:
        name:
          type: string
        thumbnailUri:
          type: string
        description:
          type: string
      required:
        - name
    PutFeedGroupRequest:
      type: object
      properties:
        name:
          type: string
        thumbnailUri:
          type: string
        description:
          type: string
    FeedGroupResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FeedGroupDTO'
    FeedGroupsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeedGroupDTO'
    BoxAccessDTO:
      type: object
      properties:
        enabled:
          type: boolean
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/SimpleMembershipDTO'
    BoxDTO:
      type: object
      properties:
        islandId:
          type: string
        boxAccess:
          $ref: '#/components/schemas/BoxAccessDTO'
        hasSubmitAccess:
          type: boolean
        answeredQuestionsCount:
          type: integer
        recentAnsweredQuestions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionDTO'
    PutIslandBoxAccessRequest:
      type: object
      properties:
        enabled:
          type: boolean
        membershipIds:
          type: array
          items:
            type: string
    IslandBoxAccessResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BoxAccessDTO'
    FeedMembershipCheckedDTO:
      allOf:
        - $ref: '#/components/schemas/FeedMembershipDTO'
        - type: object
          properties:
            checked:
              type: boolean
    IslandBoxAccessListResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/FeedMembershipCheckedDTO'
    QuestionDTO:
      type: object
      properties:
        id:
          type: string
        islandId:
          type: string
        text:
          type: string
        hasPaid:
          type: boolean
        priceInCents:
          type: integer
          format: int64
        hasAccess:
          type: boolean
        hasAnswer:
          type: boolean
        hasExpired:
          type: boolean
        likesCount:
          type: integer
        commentsCount:
          type: integer
        publicVisible:
          type: boolean
        visibleMemberships:
          type: array
          items:
            $ref: '#/components/schemas/SimpleMembershipDTO'
        userMemberships:
          type: array
          items:
            $ref: '#/components/schemas/SimpleMembershipDTO'
        isLiked:
          type: boolean
        createdAt:
          type: integer
          format: int64
    FullQuestionDTO:
      allOf:
        - $ref: '#/components/schemas/QuestionDTO'
        - type: object
          properties:
            answerer:
              $ref: '#/components/schemas/BriefUserDTO'
            answer:
              type: string
            answeredAt:
              type: integer
              format: int64
            comments:
              type: array
              items:
                $ref: '#/components/schemas/CommentDTO'
    PostQuestionRequest:
      type: object
      properties:
        text:
          type: string
        priceInCents:
          type: integer
          format: int64
        questionSkuId:
          type: string
        receipt:
          type: string
        transactionId:
          type: string
    QuestionResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/QuestionDTO'
    QuestionsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/QuestionDTO'
    PostAnswerRequest:
      type: object
      properties:
        text:
          type: string
        publicVisible:
          type: boolean
        visibleMembershipIds:
          type: array
          items:
            type: string
    FullQuestionResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FullQuestionDTO'
    IslandBoxResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BoxDTO'
    FullFeedResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FullFeedDTO'
    IslandFeedSnapshotDTO:
      type: object
      properties:
        userPortraitUris:
          type: array
          items:
            type: string
        feedCount:
          type: integer
    IslandFeedSnapshotResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IslandFeedSnapshotDTO'
    SponsorSkuDTO:
      type: object
      properties:
        id:
          type: string
        priceInShells:
          type: integer
          format: int64
        priceInCents:
          type: integer
          format: int64
        isDefault:
          type: boolean
    SponsorSkuDTOV2:
      type: object
      properties:
        id:
          type: string
        priceInCents:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        isDefault:
          type: boolean
        gift:
          $ref: '#/components/schemas/GiftImageDTO'
    SponsorHistoryDTO:
      type: object
      properties:
        name:
          type: string
        gift:
          $ref: '#/components/schemas/GiftImageDTO'
    SupportSkusDTO:
      type: object
      properties:
        sponsorSkus:
          type: array
          items:
            $ref: '#/components/schemas/SponsorSkuDTO'
        customizedSku:
          $ref: '#/components/schemas/SponsorSkuDTO'
    SponsorSkusDTO:
      type: object
      properties:
        sponsor:
          $ref: '#/components/schemas/SponsorshipDTO'
        sponsorSkus:
          type: array
          items:
            $ref: '#/components/schemas/SponsorSkuDTOV2'
        customizedSku:
          $ref: '#/components/schemas/SponsorSkuDTOV2'
        count:
          type: integer
          format: int64
    SponsorshipDTO:
      type: object
      properties:
        host:
          $ref: '#/components/schemas/BriefUserDTO'
        defaultGifts:
          type: array
          items:
            $ref: '#/components/schemas/GiftImageDTO'
        description:
          type: string
        gift:
          $ref: '#/components/schemas/GiftImageDTO'
        pricePerUnit:
          type: integer
          format: int64
    SupportSkusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SupportSkusDTO'
    SponsorSkusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SponsorSkusDTO'
    SponsorDTO:
      type: object
      properties:
        text:
          type: string
        count:
          type: integer
    SupportDTO:
      type: object
      properties:
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDTO'
        sponsors:
          $ref: '#/components/schemas/SponsorDTO'
    SupportDTOV2:
      type: object
      properties:
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDTO'
        sponsors:
          $ref: '#/components/schemas/SponsorshipDTO'
    SupportsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SupportDTO'
    SponsorHistoryResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/SponsorHistoryDTO'
    SupportsResponseV2:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SupportDTOV2'
    PostSupportRequest:
      type: object
      properties:
        sponsorSkuId:
          type: string
        priceInCents:
          type: integer
          format: int64
        priceInShells:
          type: integer
          format: int64
      required:
        - sponsorSkuId
    PostSponsorRequest:
      type: object
      properties:
        sponsorSkuId:
          type: string
        priceInCents:
          type: integer
          format: int64
      required:
        - sponsorSkuId
    AlipayH5PostSupportRequest:
      type: object
      properties:
        sponsorSkuId:
          type: string
        priceInCents:
          type: integer
          format: int64
        priceInShells:
          type: integer
          format: int64
        quitUrl:
          type: string
        returnUrl:
          type: string
      required:
        - sponsorSkuId
        - quitUrl
        - returnUrl
    AlipayH5PostSponsorRequest:
      type: object
      properties:
        sponsorSkuId:
          type: string
        priceInCents:
          type: integer
          format: int64
        quitUrl:
          type: string
        returnUrl:
          type: string
      required:
        - sponsorSkuId
        - quitUrl
        - returnUrl
    H5RedirectDTO:
      type: object
      properties:
        url:
          type: string
    H5WechatOrderDTO:
      type: object
      properties:
        url:
          type: string
        orderId:
          type: string
    H5WechatOrderResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/H5WechatOrderDTO'
    H5RedirectResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/H5RedirectDTO'
    IslandDiscoveryResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RecommendIslandDTO'
    MembershipTemplateDTO:
      type: object
      properties:
        text:
          type: string
    MembershipTemplatesResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/MembershipTemplateDTO'
    UserWithdrawDTO:
      type: object
      properties:
        id:
          type: string
        amountInCents:
          type: integer
          format: int64
        state:
          $ref: '#/components/schemas/WithdrawState'
        createdAt:
          type: integer
          format: int64
    UserWithdrawsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserWithdrawDTO'
    QualificationChannelDTO:
      type: object
      properties:
        name:
          type: string
    QualificationChannelsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/QualificationChannelDTO'
    UserQualificationDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        hostUrl:
          type: string
    PutUserQualificationsRequest:
      type: object
      properties:
        userQualifications:
          type: array
          items:
            $ref: '#/components/schemas/UserQualificationDTO'
    UserQualificationsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/UserQualificationDTO'
    LabelDTO:
      type: object
      properties:
        text:
          type: string
    BannerDTO:
      type: object
      properties:
        imageUri:
          type: string
        redirectUrl:
          type: string
    ActivityDTO:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/LabelDTO'
        banners:
          type: array
          items:
            $ref: '#/components/schemas/BannerDTO'
    ActivitiesResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/ActivityDTO'
    BonusDTO:
      type: object
      properties:
        userId:
          type: string
        ratio:
          type: integer
        toGain:
          type: integer
          format: int64
        gained:
          type: integer
          format: int64
    BonusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/BonusDTO'
    AlipayH5PayFeedRequest:
      type: object
      properties:
        quitUrl:
          type: string
        returnUrl:
          type: string
      required:
        - quitUrl
        - returnUrl
    AlipayCheckRequest:
      type: object
      properties:
        receipt:
          type: string
    AlipayOrderDTO:
      type: object
      properties:
        id:
          type: string
        orderString:
          type: string
        feeInCents:
          type: integer
          format: int64
        state:
          $ref: '#/components/schemas/OrderState'
    AlipayOrderResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/AlipayOrderDTO'
    PutUserPasswordRequest:
      type: object
      properties:
        code:
          type: string
        mobile:
          type: string
        otp:
          type: integer
        password:
          type: string
    PutFeedFeedgroupRequest:
      type: object
      properties:
        feedgroupId:
          type: string
        isRemove:
          type: boolean
    PostFollowRequest:
      type: object
      properties:
        followType:
          $ref: '#/components/schemas/FollowType'
        data:
          $ref: '#/components/schemas/FollowPayload'
      required:
        - followType
        - data
    FollowPayload:
      oneOf:
        - $ref: '#/components/schemas/WeiboFollowPayload'
    WeiboFollowPayload:
      type: object
      properties:
        id:
          type: string
    SupportTargetDTO:
      type: object
      properties:
        targetId:
          type: string
        targetType:
          $ref: '#/components/schemas/SupportTargetType'
        timeType:
          $ref: '#/components/schemas/SupportTargetTimeType'
        content:
          type: string
        completed:
          type: boolean
        currentAmountInCents:
          type: integer
          format: int64
        totalAmountInCents:
          type: integer
          format: int64
        currentSupporterNum:
          type: integer
          format: int64
        totalSupporterNum:
          type: integer
          format: int64
    PostSupportTargetRequest:
      type: object
      properties:
        targetId:
          type: string
        targetType:
          $ref: '#/components/schemas/SupportTargetType'
        timeType:
          $ref: '#/components/schemas/SupportTargetTimeType'
        content:
          type: string
        totalAmountInCents:
          type: integer
          format: int64
        totalSupporterNum:
          type: integer
          format: int64
    PutSponsorRequest:
      type: object
      properties:
        description:
          type: string
        giftId:
          type: string
        pricePerUnit:
          type: integer
          format: int64
    SupportTargetsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SupportTargetDTO'
    SupportTargetResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SupportTargetDTO'
    SponsorGiftsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/GiftImageDTO'
    SponsorshipResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/SponsorshipDTO'
    ChatSettingsDTO:
      type: object
      properties:
        userId:
          type: string
        displayPaymentMessage:
          type: boolean
    PutChatSettingRequest:
      type: object
      properties:
        displayPaymentMessage:
          type: boolean
    ChatSettingsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ChatSettingsDTO'
    GreetingsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: string
    IncomeProfileResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IncomeProfileDTO'
    IncomeProfileDTO:
      type: object
      properties:
        totalIncome:
          type: integer
          format: int64
        totalSupportCount:
          type: integer
        totalSubscriber:
          type: integer
        currentMonthIncome:
          type: integer
          format: int64
        currentMonthSupportCount:
          type: integer
        nextMonthIncome:
          type: integer
          format: int64
    IncomeSupportsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/IncomeSupportDTO'
    IncomeSupportDTO:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        amountInCents:
          type: integer
          format: int64
    CurrentMonthSupportResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/CurrentMonthSupportDTO'
    CurrentMonthSupportDTO:
      type: object
      properties:
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/SupportMembershipDTO'
        sponsor:
          type: object
          properties:
            name:
              type: string
            supportCount:
              type: integer
            income:
              type: integer
              format: int64
        feedCharge:
          type: object
          properties:
            name:
              type: string
            supportCount:
              type: integer
            income:
              type: integer
              format: int64
    SupportMembershipDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priceInMonth:
          type: integer
          format: int64
        isPermanent:
          type: boolean
        supportCount:
          type: integer
        income:
          type: integer
          format: int64
        isActive:
          type: boolean
    IncomeMonthlyResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IncomeMonthlyDTO'
    IncomeMonthlyDTO:
      type: object
      properties:
        monthTimestamp:
          type: integer
          format: int64
        currentMonthIncome:
          type: integer
          format: int64
        supportCount:
          type: integer
    IncomeDetailsResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
            data:
              type: array
              items:
                $ref: '#/components/schemas/IncomeDetailsDTO'
    IncomeDetailsDTO:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/BriefUserDTO'
        content:
          type: string
        amountInCents:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
    GiftImageDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        text:
          type: string
        uri:
          type: string
        emoji:
          type: string
    BannersResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/BannerDTO'
    WeiboProfileDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        followerCount:
          type: integer
          format: int64
        avatarUrl:
          type: string
    WeiboProfileResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref:  '#/components/schemas/WeiboProfileDTO'
    FollowResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FollowInfoDTO'
    SingleFollowResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/FollowDTO'
    FollowInfoDTO:
      type: object
      properties:
        weibo:
          $ref: '#/components/schemas/FollowDTO'
        tiktok:
          $ref: '#/components/schemas/FollowDTO'
        bilibili:
          $ref: '#/components/schemas/FollowDTO'
    FollowDTO:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FollowBotState'
        name:
          type: string
        runningDays:
          type: integer
          format: int64
        code:
          type: string
        ticket:
          type: string