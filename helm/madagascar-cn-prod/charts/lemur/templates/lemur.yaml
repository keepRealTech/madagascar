apiVersion: apps/v1
kind: Deployment
metadata:
  name: lemur
  namespace: {{ .Values.common_configs.namespace }}
spec:
  replicas: {{ .Values.common_configs.replicas }}
  selector:
    matchLabels:
      app: lemur
  template:
    metadata:
      annotations:
        config.linkerd.io/init-image: registry-vpc.cn-beijing.aliyuncs.com/keepreal/linkerd-proxy-init
        config.linkerd.io/init-image-version: v1.3.2
        config.linkerd.io/proxy-image: registry-vpc.cn-beijing.aliyuncs.com/keepreal/linkerd-proxy
        config.linkerd.io/proxy-image-version: stable-2.7.1
        linkerd.io/inject: enabled
      labels:
        app: lemur
    spec:
      initContainers:
        - name: sysctl
          command:
            - sh
            - -c
            - sysctl -w net.ipv4.tcp_keepalive_time=600; sysctl -w net.ipv4.tcp_keepalive_intvl=30; sysctl -w net.ipv4.tcp_keepalive_probes=10
          image: alpine:3.6
          imagePullPolicy: IfNotPresent
          resources: {}
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
      imagePullSecrets:
        - name: {{ .Values.global.acr.acr_secret_name }}
      containers:
        - name: lemur
          image: {{ .Values.images.lemur.name }}:{{ .Values.images.lemur.tag }}
          imagePullPolicy: {{ .Values.images.lemur.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: lemur
          env:
            - name: ROCKETMQ_STATSEVENT_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: aliyun-rmq
                  key: access-key
            - name: ROCKETMQ_STATSEVENT_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: aliyun-rmq
                  key: access-secret
          resources:
            limits:
              memory: {{ .Values.common_configs.memory }}
            requests:
              cpu: {{ .Values.common_configs.cpu }}
              memory: {{ .Values.common_configs.memory }}
          ports:
            - containerPort: 8081
              name: lemur-http
---
apiVersion: v1
kind: Service
metadata:
  name: lemur
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: lemur-http
  selector:
    app: lemur